{"ast":null,"code":"var _jsxFileName = \"/home/aronberenyi/Code/ancrypto/src/components/Settings/Search.js\";\nimport styled from 'styled-components';\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { breakPoints } from '../Shared/GlobalTheme';\nimport fuzzy from 'fuzzy';\nimport { AppContext } from '../App/AppProvider';\nimport _ from 'lodash';\nconst Title = styled.h2`\n    color: var(--color-main-darker);\n    font-size: var(--xl);\n`;\nconst Form = styled.form`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    flex-wrap: wrap;\n\n`;\nconst SearchInput = styled.input`\n    border: 0;\n    border: 1px solid var(--color-secondary-light);\n    padding: var(--m) var(--l);\n    box-shadow: var(--shadow);\n    border-radius: var(--radius);\n    margin: var(--s) 0;\n    font-size: var(--mx);\n\n    &:focus {\n        border-color: var(--color-main)\n    }\n\n    @media(max-width: ${breakPoints.mobile}) {\n        width: 100%;\n    }\n`; // let fuzzyResults = fuzzy.filter(inputValue, allStringsToSearch, {})\n// const debounce = (callback, value, checkValue, timeout) => {\n//     function check() {\n//        if (value === inputValue) {\n//            callback()\n//        } else { return null }\n//     }\n//     setTimeout(check(), timeout)\n//     // Check if value is still the same\n//     // If not return null\n//     // if yes, then call the callback with timeout\n// }\n\nconst Search = () => {\n  const [userQuery, setQuery] = useState(''); //  ******************** debouncing\n\n  const handleFilter = useCallback(_.debounce((userQuery, coinList, setFilteredCoins) => {\n    console.log('HandleFilter is fired'); //  Get all the coin symbols\n\n    const coinSymbols = Object.keys(coinList); // Get all the coin names and map symbol to name\n\n    const coinNames = coinSymbols.map(sym => coinList[sym].coinName);\n    let allStringsToSearch = coinSymbols.concat(coinNames);\n    console.log(allStringsToSearch);\n  }, 500), [userQuery]);\n  const isInitialMount = useRef(true);\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      handleFilter();\n      return handleFilter.cancel;\n    }\n  }, [userQuery, handleFilter]); // ****************-\n\n  return /*#__PURE__*/React.createElement(AppContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, ({\n    setFileredCoins,\n    coinList\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(SearchInput, {\n    value: userQuery,\n    onChange: e => setQuery(e.target.value),\n    name: \"searc\",\n    placeholder: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default Search;","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/src/components/Settings/Search.js"],"names":["styled","React","useState","useCallback","useEffect","useRef","breakPoints","fuzzy","AppContext","_","Title","h2","Form","form","SearchInput","input","mobile","Search","userQuery","setQuery","handleFilter","debounce","coinList","setFilteredCoins","console","log","coinSymbols","Object","keys","coinNames","map","sym","coinName","allStringsToSearch","concat","isInitialMount","current","cancel","setFileredCoins","e","target","value"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,EAAkDC,MAAlD,QAAgE,OAAhE;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AAGA,MAAMC,KAAK,GAAGV,MAAM,CAACW,EAAG;;;CAAxB;AAIA,MAAMC,IAAI,GAAGZ,MAAM,CAACa,IAAK;;;;;;;;CAAzB;AAUA,MAAMC,WAAW,GAAGd,MAAM,CAACe,KAAM;;;;;;;;;;;;;wBAaTT,WAAW,CAACU,MAAO;;;CAb3C,C,CAkBA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC,CAFiB,CAIrB;;AACI,QAAMkB,YAAY,GAAGjB,WAAW,CAACM,CAAC,CAACY,QAAF,CAAW,CAACH,SAAD,EAAYI,QAAZ,EAAsBC,gBAAtB,KAA2C;AACnFC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EADmF,CAEnF;;AACA,UAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYN,QAAZ,CAApB,CAHmF,CAInF;;AAEA,UAAMO,SAAS,GAAGH,WAAW,CAACI,GAAZ,CAAgBC,GAAG,IAAIT,QAAQ,CAACS,GAAD,CAAR,CAAcC,QAArC,CAAlB;AACA,QAAIC,kBAAkB,GAAGP,WAAW,CAACQ,MAAZ,CAAmBL,SAAnB,CAAzB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYQ,kBAAZ;AAEH,GAVgC,EAU9B,GAV8B,CAAD,EAUvB,CAACf,SAAD,CAVuB,CAAhC;AAYA,QAAMiB,cAAc,GAAG9B,MAAM,CAAC,IAAD,CAA7B;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI+B,cAAc,CAACC,OAAnB,EAA4B;AACxBD,MAAAA,cAAc,CAACC,OAAf,GAAyB,KAAzB;AACF,KAFF,MAEQ;AACHhB,MAAAA,YAAY;AAEZ,aAAOA,YAAY,CAACiB,MAApB;AACH;AACL,GARQ,EAQN,CAACnB,SAAD,EAAYE,YAAZ,CARM,CAAT,CApBiB,CA6BrB;;AACI,sBACI,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAACkB,IAAAA,eAAD;AAAkBhB,IAAAA;AAAlB,GAAD,kBACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,WAAD;AACI,IAAA,KAAK,EAAEJ,SADX;AAEI,IAAA,QAAQ,EAAEqB,CAAC,IAAIpB,QAAQ,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,WAAW,EAAC,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFR,CADJ;AAiBH,CA/CD;;AAiDA,eAAexB,MAAf","sourcesContent":["import styled from 'styled-components'\nimport React, { useState, useCallback, useEffect, useRef } from 'react'\nimport { breakPoints } from '../Shared/GlobalTheme'\nimport fuzzy from 'fuzzy'\nimport { AppContext } from '../App/AppProvider'\nimport _ from 'lodash'\n\n\nconst Title = styled.h2`\n    color: var(--color-main-darker);\n    font-size: var(--xl);\n`\nconst Form = styled.form`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    flex-wrap: wrap;\n\n`\n\nconst SearchInput = styled.input`\n    border: 0;\n    border: 1px solid var(--color-secondary-light);\n    padding: var(--m) var(--l);\n    box-shadow: var(--shadow);\n    border-radius: var(--radius);\n    margin: var(--s) 0;\n    font-size: var(--mx);\n\n    &:focus {\n        border-color: var(--color-main)\n    }\n\n    @media(max-width: ${breakPoints.mobile}) {\n        width: 100%;\n    }\n`\n\n// let fuzzyResults = fuzzy.filter(inputValue, allStringsToSearch, {})\n\n\n\n// const debounce = (callback, value, checkValue, timeout) => {\n//     function check() {\n//        if (value === inputValue) {\n//            callback()\n//        } else { return null }\n//     }\n//     setTimeout(check(), timeout)\n//     // Check if value is still the same\n//     // If not return null\n//     // if yes, then call the callback with timeout\n// }\n\n\n\nconst Search = () => {\n\n    const [userQuery, setQuery] = useState('')\n\n//  ******************** debouncing\n    const handleFilter = useCallback(_.debounce((userQuery, coinList, setFilteredCoins) => {\n        console.log('HandleFilter is fired')\n        //  Get all the coin symbols\n        const coinSymbols = Object.keys(coinList)\n        // Get all the coin names and map symbol to name\n\n        const coinNames = coinSymbols.map(sym => coinList[sym].coinName)\n        let allStringsToSearch = coinSymbols.concat(coinNames)\n        console.log(allStringsToSearch)\n\n    }, 500), [userQuery])\n\n    const isInitialMount = useRef(true);\n\n\n    useEffect(() => {\n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n         } else {\n             handleFilter()\n     \n             return handleFilter.cancel;\n         }\n    }, [userQuery, handleFilter])\n// ****************-\n    return (\n        <AppContext.Consumer>\n            {({setFileredCoins, coinList}) => \n                <Form>\n                    <Title>Search</Title>\n                    <SearchInput\n                        value={userQuery}\n                        onChange={e => setQuery(e.target.value)}\n                        name=\"searc\"\n                        placeholder=\"search\"\n                        />\n                </Form>\n            }\n        </AppContext.Consumer>\n\n    \n    )\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}