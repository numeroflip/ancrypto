{"ast":null,"code":"var _jsxFileName = \"/home/aronberenyi/Code/ancrypto/src/components/Settings/CoinGrid.js\";\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { DataContext } from '../contexts';\nimport CoinTile from './CoinTile';\nimport { breakPoints } from '../Shared';\nconst Grid = styled.div`\n    max-width: var(--max-width);\n    margin: var(--xl) auto;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, .8fr));\n    justify-content: center;\n    grid-gap: var(--l);\n    align-items: center;\n\n    @media( max-width: ${breakPoints.tablet}) {\n      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr))\n  }\n\n    @media( max-width: ${breakPoints.smallMobile}) {\n      grid-template-columns: 1fr 1fr;\n    }\n\n`;\n\nfunction getLowerSectionCoins(coinList, filteredCoins) {\n  return Object.keys(filteredCoins).length > 0 ? Object.keys(filteredCoins).slice(0, 100) : coinList.slice(0, 100);\n}\n\nfunction displayCoins(coinList, topSection, favourites, filteredCoins) {\n  let keyList = topSection ? favourites : getLowerSectionCoins(coinList, filteredCoins);\n\n  if (keyList.length) {\n    console.log(keyList);\n    return keyList.map(coinKey => {\n      return topSection ? /*#__PURE__*/React.createElement(CoinTile, {\n        topSection: true,\n        remove: true,\n        key: `${coinKey}GZDN`,\n        coinKey: coinKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }) : favourites && favourites.includes(coinKey) ? /*#__PURE__*/React.createElement(CoinTile, {\n        disabled: true,\n        key: `${coinKey}BRGGD`,\n        coinKey: coinKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(CoinTile, {\n        key: `${coinKey}DRMKL`,\n        coinKey: coinKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      });\n    });\n  } else {\n    return null;\n  }\n}\n\nexport default function CoinGrid({\n  topSection,\n  filteredCoins\n}) {\n  const {\n    favourites,\n    sortedCoins\n  } = useContext(DataContext);\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, displayCoins(sortedCoins, topSection, favourites, filteredCoins));\n}","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/src/components/Settings/CoinGrid.js"],"names":["React","useContext","styled","DataContext","CoinTile","breakPoints","Grid","div","tablet","smallMobile","getLowerSectionCoins","coinList","filteredCoins","Object","keys","length","slice","displayCoins","topSection","favourites","keyList","console","log","map","coinKey","includes","CoinGrid","sortedCoins"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,WAAR,QAA0B,WAA1B;AAGA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAI;;;;;;;;;yBASCF,WAAW,CAACG,MAAO;;;;yBAInBH,WAAW,CAACI,WAAY;;;;CAbjD;;AAmBA,SAASC,oBAAT,CAA8BC,QAA9B,EAAwCC,aAAxC,EAAuD;AACnD,SAAQC,MAAM,CAACC,IAAP,CAAYF,aAAZ,EAA2BG,MAA3B,GAAoC,CAArC,GACDF,MAAM,CAACC,IAAP,CAAYF,aAAZ,EAA2BI,KAA3B,CAAiC,CAAjC,EAAoC,GAApC,CADC,GAEDL,QAAQ,CAACK,KAAT,CAAe,CAAf,EAAkB,GAAlB,CAFN;AAGH;;AAED,SAASC,YAAT,CAAsBN,QAAtB,EAAgCO,UAAhC,EAA4CC,UAA5C,EAAwDP,aAAxD,EAAuE;AACnE,MAAIQ,OAAO,GAAGF,UAAU,GACpBC,UADoB,GAEpBT,oBAAoB,CAACC,QAAD,EAAWC,aAAX,CAFxB;;AAGA,MAAIQ,OAAO,CAACL,MAAZ,EAAoB;AAClBM,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAOA,OAAO,CAACG,GAAR,CAAaC,OAAD,IAAa;AAE5B,aAAON,UAAU,gBACb,oBAAC,QAAD;AAAU,QAAA,UAAU,MAApB;AAAqB,QAAA,MAAM,MAA3B;AAA6B,QAAA,GAAG,EAAG,GAAEM,OAAQ,MAA7C;AAAoD,QAAA,OAAO,EAAEA,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADa,GAEZL,UAAU,IAAIA,UAAU,CAACM,QAAX,CAAoBD,OAApB,CAAd,gBACG,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,IAApB;AAA2B,QAAA,GAAG,EAAG,GAAEA,OAAQ,OAA3C;AAAmD,QAAA,OAAO,EAAEA,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,gBAEG,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAG,GAAEA,OAAQ,OAA1B;AAAkC,QAAA,OAAO,EAAEA,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;AAKH,KAPM,CAAP;AAQD,GAVD,MAUO;AAAE,WAAO,IAAP;AAAa;AAEzB;;AAGD,eAAe,SAASE,QAAT,CAAkB;AAAER,EAAAA,UAAF;AAAcN,EAAAA;AAAd,CAAlB,EAAgD;AAE3D,QAAM;AAAEO,IAAAA,UAAF;AAAcQ,IAAAA;AAAd,MAA6B1B,UAAU,CAACE,WAAD,CAA7C;AAEA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKc,YAAY,CAACU,WAAD,EAAcT,UAAd,EAA0BC,UAA1B,EAAsCP,aAAtC,CADjB,CADJ;AAKH","sourcesContent":["import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { DataContext } from '../contexts'\nimport CoinTile from './CoinTile'\nimport {breakPoints} from '../Shared'\n\n\nconst Grid = styled.div`\n    max-width: var(--max-width);\n    margin: var(--xl) auto;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, .8fr));\n    justify-content: center;\n    grid-gap: var(--l);\n    align-items: center;\n\n    @media( max-width: ${breakPoints.tablet}) {\n      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr))\n  }\n\n    @media( max-width: ${breakPoints.smallMobile}) {\n      grid-template-columns: 1fr 1fr;\n    }\n\n`\n\nfunction getLowerSectionCoins(coinList, filteredCoins) {\n    return (Object.keys(filteredCoins).length > 0) \n        ? Object.keys(filteredCoins).slice(0, 100)\n        : coinList.slice(0, 100)\n}\n\nfunction displayCoins(coinList, topSection, favourites, filteredCoins) {\n    let keyList = topSection \n      ? favourites\n      : getLowerSectionCoins(coinList, filteredCoins)\n    if (keyList.length) {\n      console.log(keyList)\n      return keyList.map((coinKey) => {\n  \n          return topSection \n            ? <CoinTile topSection remove  key={`${coinKey}GZDN`} coinKey={coinKey} /> \n            :  favourites && favourites.includes(coinKey)\n                ? <CoinTile disabled={true}  key={`${coinKey}BRGGD`} coinKey={coinKey} />\n                : <CoinTile key={`${coinKey}DRMKL`} coinKey={coinKey} />\n      })\n    } else { return null }\n\n}\n\n\nexport default function CoinGrid({ topSection, filteredCoins}) {\n\n    const { favourites, sortedCoins} = useContext(DataContext);\n\n    return (\n        <Grid>\n            {displayCoins(sortedCoins, topSection, favourites, filteredCoins )}\n        </Grid>\n    )\n}"]},"metadata":{},"sourceType":"module"}