{"ast":null,"code":"var _jsxFileName = \"/home/aronberenyi/Code/ancrypto/src/components/App/AppProvider.js\";\nimport React, { useState, useEffect } from 'react';\nimport cc, { price } from 'cryptocompare';\nimport { render } from '@testing-library/react';\nimport { filter } from 'lodash';\ncc.setApiKey('6bce00cebd36b06c07f20e0e94c2a0fe1b0211dc0a8a8dc030f6fb8b4117f707');\nexport const AppContext = React.createContext();\nconst MAX_FAVOURITES = 10;\nexport default (({\n  children\n}) => {\n  // ==============STATE========================\n  const [renderCount, setRenderCount] = useState(null);\n  const [page, setPage] = useState('dashboard');\n  const [firstVisit, setFirstVisit] = useState(localStorage.getItem('ancrypto') ? false : true);\n  const [favourites, setFavourites] = useState(firstVisit ? [] : getFavsFromLocal());\n  const [coinList, setCoinList] = useState(null);\n  const [filteredCoins, setFilteredCoins] = useState([]);\n  const [prices, setPrices] = useState([]);\n  console.log('BUBUBUOBIUBIUB=================================');\n  console.log('renderCount: ', renderCount); // console.log('---page')\n  // console.log(page)\n  // console.log('---firstVisit')\n  // console.log(firstVisit)\n  // console.log('---favourites')\n  // console.log(favourites)\n\n  console.log('---coinList');\n  console.log(coinList);\n  console.log('---filteredCoins');\n  console.log(filteredCoins);\n  console.log('---prices');\n  console.log(prices);\n\n  function getFavsFromLocal() {\n    let data = JSON.parse(localStorage.getItem('ancrypto'));\n    let favs = data.favourites;\n    return favs ? favs : [];\n  }\n\n  const fetchCoins = async () => {\n    console.log('=============FETCHCOIN HAPPENED===============');\n    let coins = await cc.coinList();\n    coins = coins.Data;\n\n    try {\n      return coins;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getPrices = async () => {\n    const returnData = [];\n    favourites.forEach(async favourite => {\n      try {\n        let priceData = await cc.priceFull(favourite, 'USD');\n        returnData.push(priceData);\n      } catch (e) {\n        console.warn('Fetch price error: ', e);\n      }\n    });\n    console.log('***returnData');\n    console.log(returnData);\n    return returnData;\n  };\n\n  const fetchPrices = async () => {\n    let prices = await getPrices();\n    console.log('***prices');\n    console.log(prices);\n    setPrices(prices);\n  };\n\n  const addCoin = coinKey => {\n    if (favourites.length < MAX_FAVOURITES && !favourites.includes(coinKey)) {\n      setFavourites([...favourites, coinKey]);\n    }\n  };\n\n  const updateFavsInLocalStorage = favourites => {\n    localStorage.setItem('ancrypto', JSON.stringify({\n      favourites\n    }));\n  };\n\n  useEffect(() => {\n    setRenderCount(renderCount + 1);\n  }, [page, firstVisit, favourites, coinList, filteredCoins, prices]); // Write favourites into localstorage\n\n  useEffect(() => updateFavsInLocalStorage(favourites), [favourites]); // Fetch Data at startup\n  // useEffect( () => {\n  //         setRenderCount(0)\n  //         fetchCoins()\n  //         .then(coins => setCoinList(coins))\n  //         .then (() =>fetchPrices())\n  // }, [])\n\n  const isInFavourites = coinKey => {\n    return favourites.includes(coinKey);\n  };\n\n  const removeCoin = coinKey => {\n    setFavourites(favourites.filter(key => key !== coinKey));\n  };\n\n  const savedSettings = () => {\n    let ancryptoData = JSON.parse(localStorage.getItem('ancrypto'));\n\n    if (!ancryptoData) {\n      setFavourites([]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      page,\n      coinList,\n      setCoinList,\n      setPage,\n      favourites,\n      isInFavourites,\n      setFavourites,\n      filteredCoins,\n      setFilteredCoins,\n      addCoin,\n      removeCoin,\n      firstVisit\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, children);\n});","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/src/components/App/AppProvider.js"],"names":["React","useState","useEffect","cc","price","render","filter","setApiKey","AppContext","createContext","MAX_FAVOURITES","children","renderCount","setRenderCount","page","setPage","firstVisit","setFirstVisit","localStorage","getItem","favourites","setFavourites","getFavsFromLocal","coinList","setCoinList","filteredCoins","setFilteredCoins","prices","setPrices","console","log","data","JSON","parse","favs","fetchCoins","coins","Data","e","getPrices","returnData","forEach","favourite","priceData","priceFull","push","warn","fetchPrices","addCoin","coinKey","length","includes","updateFavsInLocalStorage","setItem","stringify","isInFavourites","removeCoin","key","savedSettings","ancryptoData"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport cc, { price } from 'cryptocompare'\nimport { render } from '@testing-library/react';\nimport { filter } from 'lodash';\ncc.setApiKey('6bce00cebd36b06c07f20e0e94c2a0fe1b0211dc0a8a8dc030f6fb8b4117f707')\nexport const AppContext = React.createContext();\n\nconst MAX_FAVOURITES = 10;\n\nexport default ({children}) => {\n\n    // ==============STATE========================\n    const [renderCount, setRenderCount] = useState(null);\n    const [page, setPage] = useState('dashboard');\n    const [firstVisit, setFirstVisit] = useState(localStorage.getItem('ancrypto') ? false : true)\n    const [favourites, setFavourites] = useState(firstVisit ? [] : getFavsFromLocal());\n    const [coinList, setCoinList] = useState(null)\n    const [filteredCoins, setFilteredCoins] = useState([])\n    const [prices, setPrices] = useState([]);\n\n    console.log('BUBUBUOBIUBIUB=================================')\n    console.log('renderCount: ', renderCount)\n    // console.log('---page')\n    // console.log(page)\n    // console.log('---firstVisit')\n    // console.log(firstVisit)\n    // console.log('---favourites')\n    // console.log(favourites)\n    console.log('---coinList')\n    console.log(coinList)\n    console.log('---filteredCoins')\n    console.log(filteredCoins)\n    console.log('---prices')\n    console.log(prices)\n    \n\n    function getFavsFromLocal() {\n        let data = JSON.parse(localStorage.getItem('ancrypto'))\n        let favs = data.favourites;\n        return favs ? favs : []\n    }\n    \n    const fetchCoins = async () => {\n        console.log('=============FETCHCOIN HAPPENED===============')\n        let coins = await cc.coinList()\n        coins = coins.Data\n        try {return coins}\n        catch(e) {console.log(e)}\n    }\n    \n    const getPrices = async () => {\n        const returnData = [];\n        favourites.forEach(async favourite => {\n            try {\n                let priceData = await cc.priceFull(favourite, 'USD');\n                returnData.push(priceData)\n            } catch(e) { console.warn('Fetch price error: ', e) }\n        })\n        \n        console.log('***returnData')\n        console.log(returnData)\n        return returnData\n    }\n    const fetchPrices = async () => {\n        let prices = await getPrices()\n        console.log('***prices')\n        console.log(prices)\n        setPrices(prices)\n    }\n    \n\n\n    const addCoin = coinKey => {\n        if((favourites.length < MAX_FAVOURITES ) && !favourites.includes(coinKey)) {\n            setFavourites([...favourites, coinKey]);\n        }\n    }\n    const updateFavsInLocalStorage = (favourites) => {\n        localStorage.setItem('ancrypto', JSON.stringify({favourites}))\n    }\n\n    useEffect(() => {setRenderCount(renderCount + 1)}, [page, firstVisit, favourites, coinList, filteredCoins, prices])\n\n    // Write favourites into localstorage\n    useEffect(() => updateFavsInLocalStorage(favourites), [favourites])\n\n    // Fetch Data at startup\n    // useEffect( () => {\n    //         setRenderCount(0)\n    //         fetchCoins()\n    //         .then(coins => setCoinList(coins))\n    //         .then (() =>fetchPrices())\n    // }, [])\n\n\n    const isInFavourites = (coinKey) => {\n        return favourites.includes(coinKey)\n    } \n\n    const removeCoin = coinKey => {\n        setFavourites(favourites.filter(key => key !== coinKey))\n    }\n\n    const savedSettings = () => {\n        let ancryptoData = JSON.parse(localStorage.getItem('ancrypto'))\n        if (!ancryptoData) {setFavourites([]);}\n    }\n\n\n    return (\n    <AppContext.Provider value={\n        {\n            page, \n            coinList,\n            setCoinList, \n            setPage, \n            favourites,\n            isInFavourites,\n            setFavourites, \n            filteredCoins,\n            setFilteredCoins,\n            addCoin, \n            removeCoin, \n            firstVisit\n        }\n    }>{children}</AppContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}