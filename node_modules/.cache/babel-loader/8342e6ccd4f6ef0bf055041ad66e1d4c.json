{"ast":null,"code":"var _jsxFileName = \"/home/aronberenyi/Code/ancrypto/src/components/Dashboard/PriceTile.js\";\nimport React, { useContext } from 'react';\nimport styled, { css } from 'styled-components';\nimport { SelectableTile } from '../Shared';\nimport { DataContext } from '../contexts';\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  maximumFractionDigits: 5\n});\n\nconst numFormat = number => {\n  // return +number.toPrecision(precision)\n  return formatter.format(number);\n};\n\nconst percFormat = percent => {\n  return Math.round(percent.toFixed(3) * 1000) / 1000;\n};\n\nconst PriceTileStyled = styled(SelectableTile)`\n\n  ${props => props.noData && css`\n    pointer-events: none;\n    opacity: 0.6;\n  `}\n\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  align-items: center;\n  width: 100%;\n\n  &:hover {\n    border-color: var(--color-main-dark)\n  }\n\n  ${props => props.compact && css`\n    font-size: var(--l);\n  `}\n\n  ${props => props.currFavourite && css`\n    pointer-events: none;\n    box-shadow: var(--shadow);\n    border-color: var(--color-main-dark);\n  `}\n`;\nconst Price = styled.div`\n  justify-self: start;\n\n  font-size: var(--l);\n  font-weight: 700;\n`;\nconst ChangePct = styled.div`\n  font-size: var(--m);\n  justify-self: end;\n  color: var(--color-success-dark);\n\n  ${props => props.down && css`\n    color: var(--color-danger-dark);\n  `}\n\n`;\nconst Symbol = styled.div`\n  justify-self: start;\n  font-size: var(--m);\n  font-weight: 700;\n`;\n\nconst PriceTile = ({\n  priceObj,\n  index\n}) => {\n  const {\n    currFavourite,\n    setCurrFavourite\n  } = useContext(DataContext);\n  const sym = Object.keys(priceObj)[0];\n  const data = priceObj[sym].noData ? priceObj[sym]['USD'] : {\n    CHANGEPCT24HOUR: false,\n    PRICE: false\n  };\n  return /*#__PURE__*/React.createElement(PriceTileStyled, {\n    noData: !data.PRICE,\n    as: \"button\",\n    onClick: () => setCurrFavourite(sym),\n    currFavourite: sym === currFavourite,\n    compact: index < 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Symbol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, sym), /*#__PURE__*/React.createElement(ChangePct, {\n    down: +data.CHANGEPCT24HOUR < 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, !data.noData && percFormat(data.CHANGEPCT24HOUR) + '%'), /*#__PURE__*/React.createElement(Price, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, !data.noData ? numFormat(data.PRICE) : 'No data'));\n};\n\nexport default PriceTile;","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/src/components/Dashboard/PriceTile.js"],"names":["React","useContext","styled","css","SelectableTile","DataContext","formatter","Intl","NumberFormat","style","currency","maximumFractionDigits","numFormat","number","format","percFormat","percent","Math","round","toFixed","PriceTileStyled","props","noData","compact","currFavourite","Price","div","ChangePct","down","Symbol","PriceTile","priceObj","index","setCurrFavourite","sym","Object","keys","data","CHANGEPCT24HOUR","PRICE"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC/CC,EAAAA,KAAK,EAAE,UADwC;AAE/CC,EAAAA,QAAQ,EAAE,KAFqC;AAG/CC,EAAAA,qBAAqB,EAAE;AAHwB,CAA/B,CAAlB;;AAQA,MAAMC,SAAS,GAAIC,MAAD,IAAY;AAC5B;AACA,SAAOP,SAAS,CAACQ,MAAV,CAAiBD,MAAjB,CAAP;AACD,CAHD;;AAIA,MAAME,UAAU,GAAIC,OAAD,IAAa;AAC9B,SAAOC,IAAI,CAACC,KAAL,CAAWF,OAAO,CAACG,OAAR,CAAgB,CAAhB,IAAmB,IAA9B,IAAoC,IAA3C;AAED,CAHD;;AAKA,MAAMC,eAAe,GAAGlB,MAAM,CAACE,cAAD,CAAiB;;IAE3CiB,KAAK,IAAIA,KAAK,CAACC,MAAN,IAAgBnB,GAAI;;;GAG7B;;;;;;;;;;;IAWAkB,KAAK,IAAIA,KAAK,CAACE,OAAN,IAAiBpB,GAAI;;GAE9B;;IAEAkB,KAAK,IAAIA,KAAK,CAACG,aAAN,IAAuBrB,GAAI;;;;GAIpC;CAxBJ;AA2BA,MAAMsB,KAAK,GAAGvB,MAAM,CAACwB,GAAI;;;;;CAAzB;AAOA,MAAMC,SAAS,GAAGzB,MAAM,CAACwB,GAAI;;;;;IAKzBL,KAAK,IAAIA,KAAK,CAACO,IAAN,IAAczB,GAAI;;GAE3B;;CAPJ;AAWA,MAAM0B,MAAM,GAAG3B,MAAM,CAACwB,GAAI;;;;CAA1B;;AAOA,MAAMI,SAAS,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAEvC,QAAM;AAACR,IAAAA,aAAD;AAAgBS,IAAAA;AAAhB,MAAoChC,UAAU,CAACI,WAAD,CAApD;AAEA,QAAM6B,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYL,QAAZ,EAAsB,CAAtB,CAAZ;AACA,QAAMM,IAAI,GAAGN,QAAQ,CAACG,GAAD,CAAR,CAAcZ,MAAd,GAAuBS,QAAQ,CAACG,GAAD,CAAR,CAAc,KAAd,CAAvB,GAA8C;AAACI,IAAAA,eAAe,EAAE,KAAlB;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAA3D;AAIA,sBACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAE,CAACF,IAAI,CAACE,KAA/B;AAAsC,IAAA,EAAE,EAAC,QAAzC;AAAkD,IAAA,OAAO,EAAE,MAAMN,gBAAgB,CAACC,GAAD,CAAjF;AAAwF,IAAA,aAAa,EAAEA,GAAG,KAAKV,aAA/G;AAA8H,IAAA,OAAO,EAAEQ,KAAK,GAAG,CAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASE,GAAT,CADF,eAEE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,CAACG,IAAI,CAACC,eAAN,GAAwB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8C,CAACD,IAAI,CAACf,MAAN,IAAgBP,UAAU,CAACsB,IAAI,CAACC,eAAN,CAAV,GAAmC,GAAjG,CAFF,eAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,CAACD,IAAI,CAACf,MAAN,GAAeV,SAAS,CAACyB,IAAI,CAACE,KAAN,CAAxB,GAAuC,SAA/C,CAHF,CADF;AAQD,CAjBD;;AAoBA,eAAeT,SAAf","sourcesContent":["import React, { useContext } from 'react'\nimport styled, {css} from 'styled-components'\nimport {SelectableTile} from '../Shared'\nimport { DataContext } from '../contexts'\n\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  maximumFractionDigits: 5\n});\n\n\n\nconst numFormat = (number) => {\n  // return +number.toPrecision(precision)\n  return formatter.format(number)\n}\nconst percFormat = (percent) => {\n  return Math.round(percent.toFixed(3)*1000)/1000\n\n}\n\nconst PriceTileStyled = styled(SelectableTile)`\n\n  ${props => props.noData && css`\n    pointer-events: none;\n    opacity: 0.6;\n  `}\n\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  align-items: center;\n  width: 100%;\n\n  &:hover {\n    border-color: var(--color-main-dark)\n  }\n\n  ${props => props.compact && css`\n    font-size: var(--l);\n  `}\n\n  ${props => props.currFavourite && css`\n    pointer-events: none;\n    box-shadow: var(--shadow);\n    border-color: var(--color-main-dark);\n  `}\n`\n\nconst Price = styled.div`\n  justify-self: start;\n\n  font-size: var(--l);\n  font-weight: 700;\n`\n\nconst ChangePct = styled.div`\n  font-size: var(--m);\n  justify-self: end;\n  color: var(--color-success-dark);\n\n  ${props => props.down && css`\n    color: var(--color-danger-dark);\n  `}\n\n`\n\nconst Symbol = styled.div`\n  justify-self: start;\n  font-size: var(--m);\n  font-weight: 700;\n`\n\n\nconst PriceTile = ({priceObj, index}) => {\n  \n  const {currFavourite, setCurrFavourite} = useContext(DataContext)\n  \n  const sym = Object.keys(priceObj)[0]\n  const data = priceObj[sym].noData ? priceObj[sym]['USD'] : {CHANGEPCT24HOUR: false, PRICE: false }\n\n\n\n  return (\n    <PriceTileStyled noData={!data.PRICE} as='button' onClick={() => setCurrFavourite(sym)} currFavourite={sym === currFavourite} compact={index < 4}>\n      <Symbol>{sym}</Symbol>\n      <ChangePct down={+data.CHANGEPCT24HOUR < 0} >{!data.noData && percFormat(data.CHANGEPCT24HOUR) + '%' }</ChangePct>\n      <Price>{!data.noData ? numFormat(data.PRICE) : 'No data'}</Price>\n    </PriceTileStyled>\n  )\n\n}\n\n\nexport default PriceTile"]},"metadata":{},"sourceType":"module"}