{"ast":null,"code":"'use strict';\n/* global fetch */\n\nvar baseUrl = 'https://min-api.cryptocompare.com/data/';\nvar apiKey = '';\n\nfunction setApiKey(userApiKey) {\n  apiKey = userApiKey;\n}\n\nfunction fetchJSON(url) {\n  if (apiKey !== '') {\n    if (url.indexOf('?') > -1) {\n      url += '&api_key=';\n    } else {\n      url += '?api_key=';\n    }\n\n    url += apiKey;\n  }\n\n  return fetch(url).then(function (res) {\n    if (!res.ok) {\n      throw new Error(\"\".concat(res.status, \" \").concat(res.statusText));\n    }\n\n    return res.json();\n  }).then(function (body) {\n    if (body.Response === 'Error') throw body.Message;\n    return body;\n  });\n}\n\nfunction coinList() {\n  var url = \"\".concat(baseUrl, \"all/coinlist\");\n  return fetchJSON(url);\n}\n\nfunction exchangeList() {\n  var url = \"\".concat(baseUrl, \"all/exchanges\");\n  return fetchJSON(url);\n}\n\nfunction constituentExchangeList(options) {\n  options = options || {};\n  var url = \"\".concat(baseUrl, \"all/includedexchanges\");\n  if (options.instrument) url += \"?instrument=\".concat(options.instrument);\n  return fetchJSON(url).then(function (result) {\n    return result.Data;\n  });\n}\n\nfunction newsFeedsAndCategories() {\n  var url = \"\".concat(baseUrl, \"news/feedsandcategories\");\n  return fetchJSON(url).then(function (result) {\n    return result.Data;\n  });\n}\n\nfunction newsList(lang, options) {\n  options = options || {};\n  var url = \"\".concat(baseUrl, \"v2/news/?lang=\").concat(lang);\n  if (options.feeds) url += \"&feeds=\".concat(options.feeds);\n  if (options.categories) url += \"&categories=\".concat(options.categories);\n  if (options.excludeCategories) url += \"&categories=\".concat(options.excludeCategories);\n\n  if (options.lTs) {\n    options.lTs = dateToTimestamp(options.lTs);\n    url += \"&lTs=\".concat(options.lTs);\n  }\n\n  return fetchJSON(url).then(function (result) {\n    return result.Data;\n  });\n}\n\nfunction price(fsym, tsyms, options) {\n  options = options || {};\n  var url = \"\".concat(baseUrl, \"price?fsym=\").concat(fsym, \"&tsyms=\").concat(tsyms);\n  if (options.exchanges) url += \"&e=\".concat(options.exchanges);\n  if (options.tryConversion === false) url += '&tryConversion=false';\n  return fetchJSON(url);\n}\n\nfunction priceMulti(fsyms, tsyms, options) {\n  options = options || {};\n  var url = \"\".concat(baseUrl, \"pricemulti?fsyms=\").concat(fsyms, \"&tsyms=\").concat(tsyms);\n  if (options.exchanges) url += \"&e=\".concat(options.exchanges);\n  if (options.tryConversion === false) url += '&tryConversion=false';\n  return fetchJSON(url);\n}\n\nfunction priceFull(fsyms, tsyms, options) {\n  options = options || {};\n  var url = \"\".concat(baseUrl, \"pricemultifull?fsyms=\").concat(fsyms, \"&tsyms=\").concat(tsyms);\n  if (options.exchanges) url += \"&e=\".concat(options.exchanges);\n  if (options.tryConversion === false) url += '&tryConversion=false'; // We want the RAW data, not the DISPLAY data:\n\n  return fetchJSON(url).then(function (result) {\n    return result.RAW;\n  });\n}\n\nfunction priceHistorical(fsym, tsyms, time, options) {\n  options = options || {};\n  time = dateToTimestamp(time);\n  var url = \"\".concat(baseUrl, \"pricehistorical?fsym=\").concat(fsym, \"&tsyms=\").concat(tsyms, \"&ts=\").concat(time);\n  if (options.exchanges) url += \"&e=\".concat(options.exchanges);\n  if (options.tryConversion === false) url += '&tryConversion=false'; // The API returns json with an extra layer of nesting, so remove it\n\n  return fetchJSON(url).then(function (result) {\n    return result[fsym];\n  });\n}\n\nfunction generateAvg(fsym, tsym, e, tryConversion) {\n  var url = \"\".concat(baseUrl, \"generateAvg?fsym=\").concat(fsym, \"&tsym=\").concat(tsym, \"&e=\").concat(e);\n  if (tryConversion === false) url += '&tryConversion=false';\n  return fetchJSON(url).then(function (result) {\n    return result.RAW;\n  });\n}\n\nfunction topPairs(fsym, limit) {\n  var url = \"\".concat(baseUrl, \"top/pairs?fsym=\").concat(fsym);\n  if (limit) url += \"&limit=\".concat(limit);\n  return fetchJSON(url).then(function (result) {\n    return result.Data;\n  });\n}\n\nfunction topExchanges(fsym, tsym, limit) {\n  var url = \"\".concat(baseUrl, \"top/exchanges?fsym=\").concat(fsym, \"&tsym=\").concat(tsym);\n  if (limit) url += \"&limit=\".concat(limit);\n  return fetchJSON(url).then(function (result) {\n    return result.Data;\n  });\n}\n\nfunction topExchangesFull(fsym, tsym, limit) {\n  var url = \"\".concat(baseUrl, \"top/exchanges/full?fsym=\").concat(fsym, \"&tsym=\").concat(tsym);\n  if (limit) url += \"&limit=\".concat(limit);\n  return fetchJSON(url).then(function (result) {\n    return result.Data;\n  });\n}\n\nfunction histoDay(fsym, tsym, options) {\n  options = options || {};\n  if (options.timestamp) options.timestamp = dateToTimestamp(options.timestamp);\n  var url = \"\".concat(baseUrl, \"histoday?fsym=\").concat(fsym, \"&tsym=\").concat(tsym);\n  if (options.exchange) url += \"&e=\".concat(options.exchange);\n  if (options.limit === 'none') url += '&allData=true';else if (options.limit) url += \"&limit=\".concat(options.limit);\n  if (options.tryConversion === false) url += '&tryConversion=false';\n  if (options.aggregate) url += \"&aggregate=\".concat(options.aggregate);\n  if (options.timestamp) url += \"&toTs=\".concat(options.timestamp);\n  if (options.aggregatePredictableTimePeriods) url += \"&aggregatePredictableTimePeriods=\".concat(options.aggregatePredictableTimePeriods);\n  if (options.allData) url += \"&allData=\".concat(options.allData);\n  if (options.toTs) url += \"&toTs=\".concat(options.toTs);\n  return fetchJSON(url).then(function (result) {\n    return result.Data;\n  });\n}\n\nfunction histoHour(fsym, tsym, options) {\n  options = options || {};\n  if (options.timestamp) options.timestamp = dateToTimestamp(options.timestamp);\n  var url = \"\".concat(baseUrl, \"histohour?fsym=\").concat(fsym, \"&tsym=\").concat(tsym);\n  if (options.exchange) url += \"&e=\".concat(options.exchange);\n  if (options.limit) url += \"&limit=\".concat(options.limit);\n  if (options.tryConversion === false) url += '&tryConversion=false';\n  if (options.aggregate) url += \"&aggregate=\".concat(options.aggregate);\n  if (options.timestamp) url += \"&toTs=\".concat(options.timestamp);\n  if (options.allData) url += \"&allData=\".concat(options.allData);\n  if (options.toTs) url += \"&toTs=\".concat(options.toTs);\n  return fetchJSON(url).then(function (result) {\n    return result.Data;\n  });\n}\n\nfunction histoMinute(fsym, tsym, options) {\n  options = options || {};\n  if (options.timestamp) options.timestamp = dateToTimestamp(options.timestamp);\n  var url = \"\".concat(baseUrl, \"histominute?fsym=\").concat(fsym, \"&tsym=\").concat(tsym);\n  if (options.exchange) url += \"&e=\".concat(options.exchange);\n  if (options.limit) url += \"&limit=\".concat(options.limit);\n  if (options.tryConversion === false) url += '&tryConversion=false';\n  if (options.aggregate) url += \"&aggregate=\".concat(options.aggregate);\n  if (options.timestamp) url += \"&toTs=\".concat(options.timestamp);\n  if (options.allData) url += \"&allData=\".concat(options.allData);\n  if (options.toTs) url += \"&toTs=\".concat(options.toTs);\n  return fetchJSON(url).then(function (result) {\n    return result.Data;\n  });\n}\n\nfunction dateToTimestamp(date) {\n  if (!(date instanceof Date)) throw new Error('timestamp must be an instance of Date.');\n  return Math.floor(date.getTime() / 1000);\n}\n\nfunction latestSocial(options) {\n  options = options || {};\n  var url = \"\".concat(baseUrl, \"social/coin/latest\");\n  if (options.coinId) url += \"?coinId=\".concat(options.coinId);\n  return fetchJSON(url).then(function (result) {\n    return result.Data;\n  });\n}\n\nfunction histoSocial(timePeriod, options) {\n  options = options || {};\n  var url = \"\".concat(baseUrl, \"social/coin/histo/\").concat(timePeriod === 'hour' ? 'hour' : 'day');\n  var query = [];\n  if (options.coinId) query.push(\"coinId=\".concat(options.coinId));\n  if (options.aggregate >= 1 && options.aggregate <= 30) query.push(\"aggregate=\".concat(options.aggregate));\n  if (options.aggregate && typeof options.aggregatePredictableTimePeriods === 'boolean') query.push(\"&aggregatePredictableTimePeriods=\".concat(options.aggregatePredictableTimePeriods));\n  if (options.limit >= 1 && options.limit <= 2000) query.push(\"limit=\".concat(options.limit));\n  if (options.toTs) query.push(\"toTs=\".concat(options.toTs));\n  return fetchJSON(\"\".concat(url).concat(query.length > 0 ? '?' + query.join('&') : '')).then(function (result) {\n    return result.Data;\n  });\n}\n\nmodule.exports = {\n  setApiKey: setApiKey,\n  coinList: coinList,\n  constituentExchangeList: constituentExchangeList,\n  exchangeList: exchangeList,\n  newsFeedsAndCategories: newsFeedsAndCategories,\n  newsList: newsList,\n  price: price,\n  priceMulti: priceMulti,\n  priceFull: priceFull,\n  priceHistorical: priceHistorical,\n  generateAvg: generateAvg,\n  topPairs: topPairs,\n  topExchanges: topExchanges,\n  topExchangesFull: topExchangesFull,\n  histoDay: histoDay,\n  histoHour: histoHour,\n  histoMinute: histoMinute,\n  latestSocial: latestSocial,\n  histoSocial: histoSocial\n};","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/node_modules/cryptocompare/index.js"],"names":["baseUrl","apiKey","setApiKey","userApiKey","fetchJSON","url","indexOf","fetch","then","res","ok","Error","status","statusText","json","body","Response","Message","coinList","exchangeList","constituentExchangeList","options","instrument","result","Data","newsFeedsAndCategories","newsList","lang","feeds","categories","excludeCategories","lTs","dateToTimestamp","price","fsym","tsyms","exchanges","tryConversion","priceMulti","fsyms","priceFull","RAW","priceHistorical","time","generateAvg","tsym","e","topPairs","limit","topExchanges","topExchangesFull","histoDay","timestamp","exchange","aggregate","aggregatePredictableTimePeriods","allData","toTs","histoHour","histoMinute","date","Date","Math","floor","getTime","latestSocial","coinId","histoSocial","timePeriod","query","push","length","join","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n/* global fetch */\n\nconst baseUrl = 'https://min-api.cryptocompare.com/data/'\nlet apiKey = ''\n\nfunction setApiKey (userApiKey) {\n  apiKey = userApiKey\n}\n\nfunction fetchJSON (url) {\n  if (apiKey !== '') {\n    if (url.indexOf('?') > -1) {\n      url += '&api_key='\n    } else {\n      url += '?api_key='\n    }\n    url += apiKey\n  }\n  return fetch(url)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} ${res.statusText}`)\n      }\n      return res.json()\n    })\n    .then(body => {\n      if (body.Response === 'Error') throw body.Message\n      return body\n    })\n}\n\nfunction coinList () {\n  const url = `${baseUrl}all/coinlist`\n  return fetchJSON(url)\n}\n\nfunction exchangeList () {\n  const url = `${baseUrl}all/exchanges`\n  return fetchJSON(url)\n}\n\nfunction constituentExchangeList (options) {\n  options = options || {}\n  let url = `${baseUrl}all/includedexchanges`\n  if (options.instrument) url += `?instrument=${options.instrument}`\n  return fetchJSON(url).then(result => result.Data)\n}\n\nfunction newsFeedsAndCategories () {\n  const url = `${baseUrl}news/feedsandcategories`\n  return fetchJSON(url).then(result => result.Data)\n}\n\nfunction newsList (lang, options) {\n  options = options || {}\n  let url = `${baseUrl}v2/news/?lang=${lang}`\n  if (options.feeds) url += `&feeds=${options.feeds}`\n  if (options.categories) url += `&categories=${options.categories}`\n  if (options.excludeCategories) url += `&categories=${options.excludeCategories}`\n  if (options.lTs) {\n    options.lTs = dateToTimestamp(options.lTs)\n    url += `&lTs=${options.lTs}`\n  }\n  return fetchJSON(url).then(result => result.Data)\n}\n\nfunction price (fsym, tsyms, options) {\n  options = options || {}\n  let url = `${baseUrl}price?fsym=${fsym}&tsyms=${tsyms}`\n  if (options.exchanges) url += `&e=${options.exchanges}`\n  if (options.tryConversion === false) url += '&tryConversion=false'\n  return fetchJSON(url)\n}\n\nfunction priceMulti (fsyms, tsyms, options) {\n  options = options || {}\n  let url = `${baseUrl}pricemulti?fsyms=${fsyms}&tsyms=${tsyms}`\n  if (options.exchanges) url += `&e=${options.exchanges}`\n  if (options.tryConversion === false) url += '&tryConversion=false'\n  return fetchJSON(url)\n}\n\nfunction priceFull (fsyms, tsyms, options) {\n  options = options || {}\n  let url = `${baseUrl}pricemultifull?fsyms=${fsyms}&tsyms=${tsyms}`\n  if (options.exchanges) url += `&e=${options.exchanges}`\n  if (options.tryConversion === false) url += '&tryConversion=false'\n  // We want the RAW data, not the DISPLAY data:\n  return fetchJSON(url).then(result => result.RAW)\n}\n\nfunction priceHistorical (fsym, tsyms, time, options) {\n  options = options || {}\n  time = dateToTimestamp(time)\n  let url = `${baseUrl}pricehistorical?fsym=${fsym}&tsyms=${tsyms}&ts=${time}`\n  if (options.exchanges) url += `&e=${options.exchanges}`\n  if (options.tryConversion === false) url += '&tryConversion=false'\n  // The API returns json with an extra layer of nesting, so remove it\n  return fetchJSON(url).then(result => result[fsym])\n}\n\nfunction generateAvg (fsym, tsym, e, tryConversion) {\n  let url = `${baseUrl}generateAvg?fsym=${fsym}&tsym=${tsym}&e=${e}`\n  if (tryConversion === false) url += '&tryConversion=false'\n  return fetchJSON(url).then(result => result.RAW)\n}\n\nfunction topPairs (fsym, limit) {\n  let url = `${baseUrl}top/pairs?fsym=${fsym}`\n  if (limit) url += `&limit=${limit}`\n  return fetchJSON(url).then(result => result.Data)\n}\n\nfunction topExchanges (fsym, tsym, limit) {\n  let url = `${baseUrl}top/exchanges?fsym=${fsym}&tsym=${tsym}`\n  if (limit) url += `&limit=${limit}`\n  return fetchJSON(url).then(result => result.Data)\n}\n\nfunction topExchangesFull (fsym, tsym, limit) {\n  let url = `${baseUrl}top/exchanges/full?fsym=${fsym}&tsym=${tsym}`\n  if (limit) url += `&limit=${limit}`\n  return fetchJSON(url).then(result => result.Data)\n}\n\nfunction histoDay (fsym, tsym, options) {\n  options = options || {}\n  if (options.timestamp) options.timestamp = dateToTimestamp(options.timestamp)\n  let url = `${baseUrl}histoday?fsym=${fsym}&tsym=${tsym}`\n  if (options.exchange) url += `&e=${options.exchange}`\n  if (options.limit === 'none') url += '&allData=true'\n  else if (options.limit) url += `&limit=${options.limit}`\n  if (options.tryConversion === false) url += '&tryConversion=false'\n  if (options.aggregate) url += `&aggregate=${options.aggregate}`\n  if (options.timestamp) url += `&toTs=${options.timestamp}`\n  if (options.aggregatePredictableTimePeriods) url += `&aggregatePredictableTimePeriods=${options.aggregatePredictableTimePeriods}`\n  if (options.allData) url += `&allData=${options.allData}`\n  if (options.toTs) url += `&toTs=${options.toTs}`\n  return fetchJSON(url).then(result => result.Data)\n}\n\nfunction histoHour (fsym, tsym, options) {\n  options = options || {}\n  if (options.timestamp) options.timestamp = dateToTimestamp(options.timestamp)\n  let url = `${baseUrl}histohour?fsym=${fsym}&tsym=${tsym}`\n  if (options.exchange) url += `&e=${options.exchange}`\n  if (options.limit) url += `&limit=${options.limit}`\n  if (options.tryConversion === false) url += '&tryConversion=false'\n  if (options.aggregate) url += `&aggregate=${options.aggregate}`\n  if (options.timestamp) url += `&toTs=${options.timestamp}`\n  if (options.allData) url += `&allData=${options.allData}`\n  if (options.toTs) url += `&toTs=${options.toTs}`\n  return fetchJSON(url).then(result => result.Data)\n}\n\nfunction histoMinute (fsym, tsym, options) {\n  options = options || {}\n  if (options.timestamp) options.timestamp = dateToTimestamp(options.timestamp)\n  let url = `${baseUrl}histominute?fsym=${fsym}&tsym=${tsym}`\n  if (options.exchange) url += `&e=${options.exchange}`\n  if (options.limit) url += `&limit=${options.limit}`\n  if (options.tryConversion === false) url += '&tryConversion=false'\n  if (options.aggregate) url += `&aggregate=${options.aggregate}`\n  if (options.timestamp) url += `&toTs=${options.timestamp}`\n  if (options.allData) url += `&allData=${options.allData}`\n  if (options.toTs) url += `&toTs=${options.toTs}`\n  return fetchJSON(url).then(result => result.Data)\n}\n\nfunction dateToTimestamp (date) {\n  if (!(date instanceof Date)) throw new Error('timestamp must be an instance of Date.')\n  return Math.floor(date.getTime() / 1000)\n}\n\nfunction latestSocial (options) {\n  options = options || {}\n  let url = `${baseUrl}social/coin/latest`\n  if (options.coinId) url += `?coinId=${options.coinId}`\n  return fetchJSON(url).then(result => result.Data)\n}\n\nfunction histoSocial (timePeriod, options) {\n  options = options || {}\n  let url = `${baseUrl}social/coin/histo/${timePeriod === 'hour' ? 'hour' : 'day'}`\n  let query = []\n  if (options.coinId) query.push(`coinId=${options.coinId}`)\n  if (options.aggregate >= 1 && options.aggregate <= 30) query.push(`aggregate=${options.aggregate}`)\n  if (options.aggregate && typeof options.aggregatePredictableTimePeriods === 'boolean') query.push(`&aggregatePredictableTimePeriods=${options.aggregatePredictableTimePeriods}`)\n  if (options.limit >= 1 && options.limit <= 2000) query.push(`limit=${options.limit}`)\n  if (options.toTs) query.push(`toTs=${options.toTs}`)\n  return fetchJSON(`${url}${query.length > 0 ? '?' + query.join('&') : ''}`).then(result => result.Data)\n}\n\nmodule.exports = {\n  setApiKey,\n  coinList,\n  constituentExchangeList,\n  exchangeList,\n  newsFeedsAndCategories,\n  newsList,\n  price,\n  priceMulti,\n  priceFull,\n  priceHistorical,\n  generateAvg,\n  topPairs,\n  topExchanges,\n  topExchangesFull,\n  histoDay,\n  histoHour,\n  histoMinute,\n  latestSocial,\n  histoSocial\n}\n"]},"metadata":{},"sourceType":"script"}