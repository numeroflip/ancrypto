{"ast":null,"code":"var _jsxFileName = \"/home/aronberenyi/Code/ancrypto/src/components/App/AppProvider.js\";\nimport React, { useState, useEffect } from 'react';\nimport cc, { price } from 'cryptocompare';\nimport { render } from '@testing-library/react';\nimport { filter } from 'lodash';\ncc.setApiKey('6bce00cebd36b06c07f20e0e94c2a0fe1b0211dc0a8a8dc030f6fb8b4117f707');\nexport const AppContext = React.createContext();\nconst MAX_FAVOURITES = 10;\nexport default (({\n  children\n}) => {\n  // ==============STATE========================\n  const [page, setPage] = useState('dashboard');\n  const [firstVisit, setFirstVisit] = useState([]); //useState(localStorage.getItem('ancrypto') ? false : true)\n\n  const [favourites, setFavourites] = useState([]); //useState(firstVisit ? [] : getFavsFromLocal());\n\n  const [coinList, setCoinList] = useState(null);\n  const [filteredCoins, setFilteredCoins] = useState([]);\n  const [prices, setPrices] = useState([]);\n  console.log('APP PROVIDER=================================');\n\n  function getFavsFromLocal() {\n    let data = JSON.parse(localStorage.getItem('ancrypto'));\n    let favs = data.favourites;\n    return favs ? favs : [];\n  }\n\n  const getPrices = async () => {\n    const returnData = [];\n    favourites.forEach(async favourite => {\n      try {\n        let priceData = await cc.priceFull(favourite, 'USD');\n        returnData.push(priceData);\n      } catch (e) {\n        console.warn('Fetch price error: ', e);\n      }\n    });\n    return returnData;\n  };\n\n  const addCoin = coinKey => {\n    if (favourites.length < MAX_FAVOURITES && !favourites.includes(coinKey)) {\n      console.log('----SetFavourites----');\n      setFavourites([...favourites, coinKey]);\n    }\n  };\n\n  const updateFavsInLocalStorage = favourites => {\n    console.log('---UpdateFavsInLocalStorage---');\n    localStorage.setItem('ancrypto', JSON.stringify({\n      favourites\n    }));\n  };\n\n  useEffect(() => {\n    console.warn('////Some Data changed (Or init when first called)////');\n    console.log('---coinList', coinList);\n    console.log('---filteredCoins', filteredCoins);\n    console.log('---prices', prices);\n    console.log('---favourites: ', favourites);\n  }, [page, firstVisit, favourites, coinList, filteredCoins, prices]); // Write favourites into localstorage\n\n  useEffect(() => updateFavsInLocalStorage(favourites), [favourites]);\n\n  const fetchPrices = async () => {\n    let prices = await getPrices();\n    console.log('***prices, fetchedPrices: ', prices);\n    return prices;\n  }; // Fetch Data at startup\n\n\n  useEffect(() => {\n    const fetchCoins = async () => {\n      console.log('=============FETCHCOIN HAPPENED===============');\n      let coins = await cc.coinList();\n      console.log('==COINS ARRIVED==');\n      coins = coins.Data;\n\n      try {\n        return coins;\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    async function initData() {\n      console.warn('////--STARTER DATA--////');\n      console.log('====STARTUP==== (fetchCoins and fetchPrices)');\n      console.log('==> fetching coins');\n      const coins = await fetchCoins();\n      console.log('//coins fetched');\n      console.log('==> fetching prices'); // console.log('// Prices are fetched')\n      // const prices = await fetchPrices()\n      // setCoinList(coins)\n      // console.log('// Coins are set')\n      // setPrices(prices);\n      // console.log('==> Prices are set')\n    }\n\n    initData();\n  }, []);\n\n  const isInFavourites = coinKey => {\n    return favourites.includes(coinKey);\n  };\n\n  const removeCoin = coinKey => {\n    setFavourites(favourites.filter(key => key !== coinKey));\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, children);\n});","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/src/components/App/AppProvider.js"],"names":["React","useState","useEffect","cc","price","render","filter","setApiKey","AppContext","createContext","MAX_FAVOURITES","children","page","setPage","firstVisit","setFirstVisit","favourites","setFavourites","coinList","setCoinList","filteredCoins","setFilteredCoins","prices","setPrices","console","log","getFavsFromLocal","data","JSON","parse","localStorage","getItem","favs","getPrices","returnData","forEach","favourite","priceData","priceFull","push","e","warn","addCoin","coinKey","length","includes","updateFavsInLocalStorage","setItem","stringify","fetchPrices","fetchCoins","coins","Data","initData","isInFavourites","removeCoin","key"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport cc, { price } from 'cryptocompare'\nimport { render } from '@testing-library/react';\nimport { filter } from 'lodash';\ncc.setApiKey('6bce00cebd36b06c07f20e0e94c2a0fe1b0211dc0a8a8dc030f6fb8b4117f707')\nexport const AppContext = React.createContext();\n\nconst MAX_FAVOURITES = 10;\n\n\n\nexport default ({children}) => {\n\n    // ==============STATE========================\n    const [page, setPage] = useState('dashboard');\n    const [firstVisit, setFirstVisit] = useState([])\n    //useState(localStorage.getItem('ancrypto') ? false : true)\n    const [favourites, setFavourites] =  useState([])\n    //useState(firstVisit ? [] : getFavsFromLocal());\n    const [coinList, setCoinList] = useState(null)\n    const [filteredCoins, setFilteredCoins] = useState([])\n    const [prices, setPrices] = useState([]);\n\n    console.log('APP PROVIDER=================================')\n\n\n    function getFavsFromLocal() {\n        let data = JSON.parse(localStorage.getItem('ancrypto'))\n        let favs = data.favourites;\n        return favs ? favs : []\n    }\n    \n \n    \n    const getPrices = async () => {\n        const returnData = [];\n        favourites.forEach(async favourite => {\n            try {\n                let priceData = await cc.priceFull(favourite, 'USD');\n                returnData.push(priceData)\n            } catch(e) { console.warn('Fetch price error: ', e) }\n        }) \n        return returnData\n    }\n\n    \n\n\n    const addCoin = coinKey => {\n        if((favourites.length < MAX_FAVOURITES ) && !favourites.includes(coinKey)) {\n            console.log('----SetFavourites----')\n            setFavourites([...favourites, coinKey]);\n        }\n    }\n    const updateFavsInLocalStorage = (favourites) => {\n        console.log('---UpdateFavsInLocalStorage---')\n\n        localStorage.setItem('ancrypto', JSON.stringify({favourites}))\n    }\n\n    useEffect(() => {\n        console.warn('////Some Data changed (Or init when first called)////')\n        console.log('---coinList' , coinList)\n        console.log('---filteredCoins', filteredCoins)\n        console.log('---prices', prices)\n        console.log('---favourites: ', favourites)\n    }, [page, firstVisit, favourites, coinList, filteredCoins, prices])\n    // Write favourites into localstorage\n    useEffect(() => updateFavsInLocalStorage(favourites), [favourites])\n\n    const fetchPrices = async () => {\n        let prices = await getPrices()\n        console.log('***prices, fetchedPrices: ', prices)\n        return prices\n    }\n    // Fetch Data at startup\n    useEffect( () => {\n\n        const fetchCoins = async () => {\n            console.log('=============FETCHCOIN HAPPENED===============')\n            let coins = await cc.coinList()\n            console.log('==COINS ARRIVED==')\n            coins = coins.Data\n            try {return coins}\n            catch(e) {console.log(e)}\n        }\n\n\n\n        async function initData() {\n            console.warn('////--STARTER DATA--////')\n            console.log('====STARTUP==== (fetchCoins and fetchPrices)')\n            console.log('==> fetching coins')\n            const coins = await fetchCoins();\n            console.log('//coins fetched')\n            console.log('==> fetching prices')\n            // console.log('// Prices are fetched')\n            // const prices = await fetchPrices()\n            // setCoinList(coins)\n            // console.log('// Coins are set')\n            // setPrices(prices);\n            // console.log('==> Prices are set')\n        }\n\n            initData()\n    }, [])\n\n\n    const isInFavourites = (coinKey) => {\n        return favourites.includes(coinKey)\n    } \n\n    const removeCoin = coinKey => {\n        setFavourites(favourites.filter(key => key !== coinKey))\n    }\n\n\n    return (\n    <AppContext.Provider \n    // value={\n    //     {\n    //         page, \n    //         coinList, \n    //         setPage, \n    //         favourites,\n    //         isInFavourites,\n    //         setFavourites, \n    //         filteredCoins,\n    //         setFilteredCoins,\n    //         addCoin, \n    //         removeCoin, \n    //         firstVisit\n    //     }\n    // }\n    >{children}</AppContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}