{"ast":null,"code":"var _jsxFileName = \"/home/aronberenyi/Code/ancrypto/src/components/Settings/Search.js\";\nimport styled from 'styled-components';\nimport React, { useContext } from 'react';\nimport { breakPoints } from '../Shared/GlobalTheme';\nimport fuzzy from 'fuzzy';\nimport { DataContext } from '../contexts';\nimport _ from 'lodash';\nconst Title = styled.h2`\n    color: var(--color-main-darker);\n    font-size: var(--xl);\n`;\nconst Form = styled.form`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    flex-wrap: wrap;\n\n`;\nconst SearchInput = styled.input`\n    border: 0;\n    border: 1px solid var(--color-secondary-light);\n    padding: var(--m) var(--l);\n    box-shadow: var(--shadow);\n    border-radius: var(--radius);\n    margin: var(--s) 0;\n    font-size: var(--mx);\n\n    &:focus {\n        border-color: var(--color-main)\n    }\n\n    @media(max-width: ${breakPoints.mobile}) {\n        width: 100%;\n    }\n`;\n\nconst handleFilter = _.debounce((userQuery, coinList, setFilteredCoins) => {\n  if (!userQuery) {\n    setFilteredCoins([]);\n    return null;\n  } //  Get all the coin symbols\n\n\n  const coinSymbols = Object.keys(coinList); // // Get all the coin names and map symbol to name\n\n  const coinNames = coinSymbols.map(sym => coinList[sym].CoinName);\n  let allStringsToSearch = coinSymbols.concat(coinNames); // A list of both symbols and names to search  \n\n  let fuzzyResults = fuzzy.filter(userQuery, allStringsToSearch, {}).map(result => result.string);\n  fuzzyResults = allStringsToSearch.filter(item => item.split('').toLowerCase.join('').includes(userQuery.split('').toLowerCase.join('')));\n\n  let filteredCoins = _.pickBy(coinList, (result, symkey) => {\n    let coinName = result.CoinName;\n    return fuzzyResults.includes(symkey) || fuzzyResults.includes(coinName);\n  });\n\n  setFilteredCoins(filteredCoins);\n}, 300);\n\nfunction filterCoins(e, setFilteredCoins, coinList) {\n  const userQuery = e.target.value;\n  handleFilter(userQuery, coinList, setFilteredCoins);\n}\n\nconst Search = () => {\n  const {\n    setFilteredCoins,\n    coinList\n  } = useContext(DataContext);\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(SearchInput, {\n    onKeyUp: e => filterCoins(e, setFilteredCoins, coinList),\n    name: \"searc\",\n    placeholder: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Search;","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/src/components/Settings/Search.js"],"names":["styled","React","useContext","breakPoints","fuzzy","DataContext","_","Title","h2","Form","form","SearchInput","input","mobile","handleFilter","debounce","userQuery","coinList","setFilteredCoins","coinSymbols","Object","keys","coinNames","map","sym","CoinName","allStringsToSearch","concat","fuzzyResults","filter","result","string","item","split","toLowerCase","join","includes","filteredCoins","pickBy","symkey","coinName","filterCoins","e","target","value","Search"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport React, { useContext } from 'react'\nimport { breakPoints } from '../Shared/GlobalTheme'\nimport fuzzy from 'fuzzy'\nimport { DataContext } from '../contexts'\nimport _ from 'lodash'\n\n\nconst Title = styled.h2`\n    color: var(--color-main-darker);\n    font-size: var(--xl);\n`\nconst Form = styled.form`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    flex-wrap: wrap;\n\n`\n\nconst SearchInput = styled.input`\n    border: 0;\n    border: 1px solid var(--color-secondary-light);\n    padding: var(--m) var(--l);\n    box-shadow: var(--shadow);\n    border-radius: var(--radius);\n    margin: var(--s) 0;\n    font-size: var(--mx);\n\n    &:focus {\n        border-color: var(--color-main)\n    }\n\n    @media(max-width: ${breakPoints.mobile}) {\n        width: 100%;\n    }\n`\n\n\nconst handleFilter = _.debounce((userQuery, coinList, setFilteredCoins) => {\n\n    if (!userQuery) {setFilteredCoins([]); return null}\n//  Get all the coin symbols\n    const coinSymbols = Object.keys(coinList)\n// // Get all the coin names and map symbol to name\n\n    const coinNames = coinSymbols.map(sym => coinList[sym].CoinName)\n    let allStringsToSearch = coinSymbols.concat(coinNames) // A list of both symbols and names to search  \n    let fuzzyResults = fuzzy\n        .filter(userQuery, allStringsToSearch, {})\n        .map(result => result.string)\n\n    fuzzyResults = allStringsToSearch.filter(item => item.split('').toLowerCase.join('').includes(userQuery.split('').toLowerCase.join('')))\n\n    let filteredCoins = _.pickBy(coinList, (result, symkey) => {\n        let coinName = result.CoinName;\n        return fuzzyResults.includes(symkey) || fuzzyResults.includes(coinName)\n        })\n\n\n    setFilteredCoins(filteredCoins);\n    \n\n}, 300)\n\nfunction filterCoins(e, setFilteredCoins, coinList) {\n    const userQuery = e.target.value;\n    handleFilter(userQuery, coinList, setFilteredCoins);\n}\n\nconst Search = () => {\n    const { setFilteredCoins, coinList } = useContext(DataContext)\n        \n    return (\n        <Form>\n            <Title>Search</Title>\n            <SearchInput\n                onKeyUp={(e) => filterCoins(e, setFilteredCoins, coinList)}\n                name=\"searc\"\n                placeholder=\"search\"\n                />\n        </Form>\n    )\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}