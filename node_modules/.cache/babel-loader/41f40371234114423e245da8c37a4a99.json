{"ast":null,"code":"var _jsxFileName = \"/home/aronberenyi/Code/ancrypto/src/components/App/AppProvider.js\";\nimport React, { useState } from 'react';\nexport const AppContext = React.createContext();\nexport default (({\n  children\n}) => {\n  const [page, setPage] = useState('dashboard');\n  const [favourites, setFavourites] = useState([]);\n\n  const savedSettings = () => {\n    let appData = JSON.parse(localStorage.getItem('ancrypto'));\n\n    if (!appData) {\n      return {\n        page: 'settings',\n        firstVisit: true\n      };\n    } else {\n      return {};\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      page,\n      setPage,\n      favourites\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, children);\n});","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/src/components/App/AppProvider.js"],"names":["React","useState","AppContext","createContext","children","page","setPage","favourites","setFavourites","savedSettings","appData","JSON","parse","localStorage","getItem","firstVisit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAO,MAAMC,UAAU,GAAGF,KAAK,CAACG,aAAN,EAAnB;AAEP,gBAAe,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,WAAD,CAAhC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMQ,aAAa,GAAG,MAAM;AACxB,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAd;;AACA,QAAG,CAACJ,OAAJ,EAAa;AACT,aAAO;AAAEL,QAAAA,IAAI,EAAE,UAAR;AAAoBU,QAAAA,UAAU,EAAE;AAAhC,OAAP;AACH,KAFD,MAEO;AAAE,aAAO,EAAP;AAAU;AACtB,GALD;;AAOA,sBACA,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAACV,MAAAA,IAAD;AAAOC,MAAAA,OAAP;AAAgBC,MAAAA;AAAhB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0DH,QAA1D,CADA;AAGH,CAdD","sourcesContent":["import React, {useState} from 'react'\n\nexport const AppContext = React.createContext();\n\nexport default ({children}) => {\n    const [page, setPage] = useState('dashboard');\n    const [favourites, setFavourites] = useState([]);\n\n    const savedSettings = () => {\n        let appData = JSON.parse(localStorage.getItem('ancrypto'));\n        if(!appData) {\n            return { page: 'settings', firstVisit: true}\n        } else { return {}}\n    }\n\n    return (\n    <AppContext.Provider value={{page, setPage, favourites}}>{children}</AppContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}