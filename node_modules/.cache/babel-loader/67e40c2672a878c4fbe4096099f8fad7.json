{"ast":null,"code":"var _jsxFileName = \"/home/aronberenyi/Code/ancrypto/src/components/contexts/DataContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport cc, { price } from 'cryptocompare';\ncc.setApiKey('6bce00cebd36b06c07f20e0e94c2a0fe1b0211dc0a8a8dc030f6fb8b4117f707');\nconst MAX_FAVOURITES = 10;\nexport const DataContext = React.createContext();\nexport const DataProvider = ({\n  children\n}) => {\n  // ==============STATE========================\n  const [page, setPage] = useState('dashboard');\n  const [firstVisit, setFirstVisit] = useState(localStorage.getItem('ancrypto') ? false : true);\n  const [favourites, setFavourites] = useState(firstVisit ? [] : getFavsFromLocal());\n  const [coinList, setCoinList] = useState(null);\n  const [filteredCoins, setFilteredCoins] = useState([]);\n  const [prices, setPrices] = useState([]);\n\n  function getFavsFromLocal() {\n    let data = JSON.parse(localStorage.getItem('ancrypto'));\n    let favs = data.favourites;\n    return favs ? favs : [];\n  }\n\n  const getPrices = async () => {\n    try {\n      const returnData = [];\n      favourites.forEach(async favourite => {\n        try {\n          let priceData = await cc.priceFull(favourite, 'USD');\n          returnData.push(priceData);\n        } catch (e) {\n          console.error('Fetch price error: ', e);\n        }\n      });\n      return returnData;\n    } catch (e) {\n      console.error('Fetch price error: ', e);\n    }\n  };\n\n  const fetchPrices = async () => {\n    let prices = await getPrices();\n    setPrices(prices);\n  };\n\n  const addCoin = coinKey => {\n    if (favourites.length < MAX_FAVOURITES && !favourites.includes(coinKey)) {\n      setFavourites([...favourites, coinKey]);\n    }\n  };\n\n  const updateFavsInLocalStorage = favourites => {\n    localStorage.setItem('ancrypto', JSON.stringify({\n      favourites\n    }));\n  }; // Write favourites into localstorage\n\n\n  useEffect(() => updateFavsInLocalStorage(favourites), [favourites]); // Fetch Data at startup\n\n  useEffect(() => {\n    const fetchCoins = async () => {\n      let coins = await cc.coinList();\n      coins = coins.Data;\n\n      try {\n        return coins;\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    const updateStateWithCoinsAndPrices = async () => {\n      const coins = await fetchCoins();\n      const prices = await fetchPrices();\n      setCoinList(coins);\n      setPrices(prices);\n    };\n\n    updateStateWithCoinsAndPrices();\n  }, []);\n\n  const isInFavourites = coinKey => {\n    return favourites.includes(coinKey);\n  };\n\n  const removeCoin = coinKey => {\n    setFavourites(favourites.filter(key => key !== coinKey));\n  };\n\n  return /*#__PURE__*/React.createElement(DataContext.Provider, {\n    value: {\n      page,\n      coinList,\n      setCoinList,\n      setPage,\n      favourites,\n      isInFavourites,\n      setFavourites,\n      filteredCoins,\n      setFilteredCoins,\n      addCoin,\n      removeCoin,\n      firstVisit\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/src/components/contexts/DataContext.js"],"names":["React","createContext","useState","useEffect","cc","price","setApiKey","MAX_FAVOURITES","DataContext","DataProvider","children","page","setPage","firstVisit","setFirstVisit","localStorage","getItem","favourites","setFavourites","getFavsFromLocal","coinList","setCoinList","filteredCoins","setFilteredCoins","prices","setPrices","data","JSON","parse","favs","getPrices","returnData","forEach","favourite","priceData","priceFull","push","e","console","error","fetchPrices","addCoin","coinKey","length","includes","updateFavsInLocalStorage","setItem","stringify","fetchCoins","coins","Data","log","updateStateWithCoinsAndPrices","isInFavourites","removeCoin","filter","key"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\nimport cc, { price } from 'cryptocompare'\n\n\ncc.setApiKey('6bce00cebd36b06c07f20e0e94c2a0fe1b0211dc0a8a8dc030f6fb8b4117f707')\n\nconst MAX_FAVOURITES = 10;\n\nexport const DataContext = React.createContext();\n\nexport const DataProvider = ({children}) => {\n\n    // ==============STATE========================\n    const [page, setPage] = useState('dashboard');\n    const [firstVisit, setFirstVisit] = useState(localStorage.getItem('ancrypto') ? false : true)\n    const [favourites, setFavourites] = useState(firstVisit ? [] : getFavsFromLocal());\n    const [coinList, setCoinList] = useState(null)\n    const [filteredCoins, setFilteredCoins] = useState([])\n    const [prices, setPrices] = useState([]);\n\n\n    function getFavsFromLocal() {\n        let data = JSON.parse(localStorage.getItem('ancrypto'))\n        let favs = data.favourites;\n        return favs ? favs : []\n    }\n    \n\n    \n    const getPrices = async () => {\n        try {\n            const returnData = [];\n            favourites.forEach(async (favourite) => {\n                try {\n                    let priceData = await cc.priceFull(favourite, 'USD');\n                    returnData.push(priceData)\n                } catch(e) { console.error('Fetch price error: ', e) }\n            })\n            \n            return returnData\n        } catch (e) { console.error('Fetch price error: ', e)}\n    }\n    const fetchPrices = async () => {\n        let prices = await getPrices()\n        setPrices(prices)\n    }\n    \n\n\n    const addCoin = coinKey => {\n        if((favourites.length < MAX_FAVOURITES ) && !favourites.includes(coinKey)) {\n            setFavourites([...favourites, coinKey]);\n        }\n    }\n    const updateFavsInLocalStorage = (favourites) => {\n        localStorage.setItem('ancrypto', JSON.stringify({favourites}))\n    }\n\n    // Write favourites into localstorage\n    useEffect(() => updateFavsInLocalStorage(favourites), [favourites])\n\n    // Fetch Data at startup\n    useEffect(() => {\n        const fetchCoins = async () => {\n          let coins = await cc.coinList()\n          coins = coins.Data\n          try {return coins}\n          catch(e) {console.log(e)}\n      }\n        const updateStateWithCoinsAndPrices = async () => {\n            const coins = await fetchCoins()\n            const prices = await fetchPrices()\n            setCoinList(coins)\n            setPrices(prices)\n        }\n    \n        updateStateWithCoinsAndPrices()\n    \n      }, [])\n\n    const isInFavourites = (coinKey) => {\n        return favourites.includes(coinKey)\n    } \n\n    const removeCoin = coinKey => {\n        setFavourites(favourites.filter(key => key !== coinKey))\n    }\n\n    return (\n    <DataContext.Provider value={\n        {\n            page, \n            coinList,\n            setCoinList, \n            setPage, \n            favourites,\n            isInFavourites,\n            setFavourites, \n            filteredCoins,\n            setFilteredCoins,\n            addCoin, \n            removeCoin, \n            firstVisit\n        }\n    }>{children}</DataContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}