{"ast":null,"code":"var _jsxFileName = \"/home/aronberenyi/Code/ancrypto/src/components/contexts/DataContext.js\";\nimport React, { useState, useEffect } from 'react';\nimport cc from 'cryptocompare';\ncc.setApiKey('6bce00cebd36b06c07f20e0e94c2a0fe1b0211dc0a8a8dc030f6fb8b4117f707');\nconst MAX_FAVOURITES = 10;\nexport const DataContext = React.createContext();\n\nconst formatCoinList = cList => {\n  let sortedCoinList = [];\n  Object.keys(cList).forEach(key => {\n    let coinObj = cList[key];\n    const order = +coinObj[\"SortOrder\"] - 1;\n    sortedCoinList[order] = coinObj;\n  });\n  console.log(sortedCoinList);\n  return sortedCoinList;\n};\n\nexport const DataProvider = ({\n  children\n}) => {\n  // ==============STATE========================\n  const [page, setPage] = useState('dashboard');\n  const [firstVisit, setFirstVisit] = useState(localStorage.getItem('ancrypto') ? false : true);\n  const [favourites, setFavourites] = useState(firstVisit ? [] : getFavsFromLocal());\n  const [coinList, setCoinList] = useState(null);\n  const [filteredCoins, setFilteredCoins] = useState([]);\n  const [prices, setPrices] = useState(null);\n  console.log('prices', prices);\n\n  function getFavsFromLocal() {\n    let data = JSON.parse(localStorage.getItem('ancrypto'));\n    let favs = data.favourites;\n    return favs ? favs : [];\n  }\n\n  const addCoin = coinKey => {\n    if (favourites.length < MAX_FAVOURITES && !favourites.includes(coinKey)) {\n      setFavourites([...favourites, coinKey]);\n    }\n  };\n\n  const updateFavsInLocalStorage = favourites => {\n    localStorage.setItem('ancrypto', JSON.stringify({\n      favourites\n    }));\n  }; // Write favourites into localstorage\n\n\n  useEffect(() => updateFavsInLocalStorage(favourites), [favourites]); // Fetch Coin data at startup\n\n  useEffect(() => {\n    const fetchCoins = async () => {\n      let coins = await cc.coinList();\n      coins = coins.Data;\n\n      try {\n        return coins;\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    const updateStateWithCoins = async () => {\n      const coins = await fetchCoins();\n      console.log(Array.isArray(Object.keys(coins)));\n      formatCoinList(coins);\n      setCoinList(coins);\n    };\n\n    updateStateWithCoins();\n  }, []); // Fetch the pices of favourites\n\n  useEffect(() => {\n    const fetchPrices = async coinsArr => {\n      const returnData = [];\n      coinsArr.forEach(async coin => {\n        try {\n          let priceData = await cc.priceFull(coin, 'USD');\n          console.log('price Data', priceData);\n          returnData.push(priceData);\n        } catch (e) {\n          console.error('Fetch price error: ', e);\n        }\n      });\n      console.log('priceArray: ', returnData);\n      return returnData;\n    };\n\n    const updatePrices = async coinsArr => {\n      let newPrices = await fetchPrices(coinsArr);\n      newPrices.map(price => {\n        console.log(price);\n      });\n      console.log('DA PRICES: ', newPrices);\n      setPrices(newPrices);\n    };\n\n    updatePrices(favourites);\n  }, [favourites]);\n\n  const isInFavourites = coinKey => {\n    return favourites.includes(coinKey);\n  };\n\n  const removeCoin = coinKey => {\n    setFavourites(favourites.filter(key => key !== coinKey));\n  };\n\n  return /*#__PURE__*/React.createElement(DataContext.Provider, {\n    value: {\n      page,\n      coinList,\n      setPage,\n      favourites,\n      isInFavourites,\n      setFavourites,\n      filteredCoins,\n      setFilteredCoins,\n      addCoin,\n      removeCoin,\n      firstVisit,\n      prices\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/src/components/contexts/DataContext.js"],"names":["React","useState","useEffect","cc","setApiKey","MAX_FAVOURITES","DataContext","createContext","formatCoinList","cList","sortedCoinList","Object","keys","forEach","key","coinObj","order","console","log","DataProvider","children","page","setPage","firstVisit","setFirstVisit","localStorage","getItem","favourites","setFavourites","getFavsFromLocal","coinList","setCoinList","filteredCoins","setFilteredCoins","prices","setPrices","data","JSON","parse","favs","addCoin","coinKey","length","includes","updateFavsInLocalStorage","setItem","stringify","fetchCoins","coins","Data","e","updateStateWithCoins","Array","isArray","fetchPrices","coinsArr","returnData","coin","priceData","priceFull","push","error","updatePrices","newPrices","map","price","isInFavourites","removeCoin","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport cc from 'cryptocompare'\n\n\ncc.setApiKey('6bce00cebd36b06c07f20e0e94c2a0fe1b0211dc0a8a8dc030f6fb8b4117f707')\n\nconst MAX_FAVOURITES = 10;\n\nexport const DataContext = React.createContext();\n\nconst formatCoinList = (cList) => {\n  let sortedCoinList = []\n  Object.keys(cList).forEach(key => {\n    let coinObj = cList[key]\n    const order = +coinObj[\"SortOrder\"] -1\n    sortedCoinList[order] = coinObj\n  })\n  console.log(sortedCoinList)\n  return sortedCoinList\n}\n\nexport const DataProvider = ({children}) => {\n\n  // ==============STATE========================\n  const [page, setPage] = useState('dashboard');\n  const [firstVisit, setFirstVisit] = useState(localStorage.getItem('ancrypto') ? false : true)\n  const [favourites, setFavourites] = useState(firstVisit ? [] : getFavsFromLocal());\n  const [coinList, setCoinList] = useState(null)\n  const [filteredCoins, setFilteredCoins] = useState([])\n  const [prices, setPrices] = useState(null);\n  console.log('prices', prices)\n\n  function getFavsFromLocal() {\n    let data = JSON.parse(localStorage.getItem('ancrypto'))\n    let favs = data.favourites;\n    return favs ? favs : []\n  }\n\n  const addCoin = coinKey => {\n    if((favourites.length < MAX_FAVOURITES ) && !favourites.includes(coinKey)) {\n      setFavourites([...favourites, coinKey]);\n    }\n  }\n  const updateFavsInLocalStorage = (favourites) => {\n    localStorage.setItem('ancrypto', JSON.stringify({favourites}))\n  }\n\n  // Write favourites into localstorage\n  useEffect(() => updateFavsInLocalStorage(favourites), [favourites])\n\n  // Fetch Coin data at startup\n  useEffect(() => {\n    const fetchCoins = async () => {\n      let coins = await cc.coinList()\n      coins = coins.Data\n      try {return coins}\n      catch(e) {console.log(e)}\n  }\n    const updateStateWithCoins = async () => {\n      const coins = await fetchCoins()\n      console.log(Array.isArray(Object.keys(coins)))\n      formatCoinList(coins)\n      setCoinList(coins)\n    }           \n\n    updateStateWithCoins()\n\n  }, [])\n\n  // Fetch the pices of favourites\n  useEffect(() => {\n      \n    const fetchPrices = async (coinsArr) => {\n        \n      const returnData = [];\n      coinsArr.forEach(async (coin) => {\n        try {\n            let priceData = await cc.priceFull(coin, 'USD');\n            console.log('price Data', priceData)\n            returnData.push(priceData)\n        } catch(e) { console.error('Fetch price error: ', e) }\n      })\n      console.log('priceArray: ', returnData)\n      return returnData\n        \n    }\n    const updatePrices = async (coinsArr) => {\n      let newPrices = await fetchPrices(coinsArr)\n      newPrices.map( price => {console.log(price)})\n      console.log('DA PRICES: ', newPrices)\n      setPrices(newPrices)\n    }\n    updatePrices(favourites) \n  },[favourites])\n\n\n\n  const isInFavourites = (coinKey) => {\n    return favourites.includes(coinKey)\n  } \n\n  const removeCoin = coinKey => {\n    setFavourites(favourites.filter(key => key !== coinKey))\n  }\n\n  return (\n  <DataContext.Provider value={\n    {\n      page, \n      coinList,\n      setPage, \n      favourites,\n      isInFavourites,\n      setFavourites, \n      filteredCoins,\n      setFilteredCoins,\n      addCoin, \n      removeCoin, \n      firstVisit,\n      prices\n    }\n  }>{children}</DataContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}