{"ast":null,"code":"var _jsxFileName = \"/home/aronberenyi/Code/ancrypto/src/components/Settings/CoinGrid.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { AppContext } from '../App/AppProvider';\nimport CoinTile from './CoinTile';\nconst Grid = styled.div`\n    margin: var(--xl) auto;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, .8fr));\n    justify-content: center;\n    grid-gap: 1rem;\n    align-items: center;\n\n`;\n\nfunction displayCoins(coinList, topSection, favourites) {\n  const KeyList = topSection ? favourites : Object.keys(coinList).slice(0, 100);\n  return KeyList.map((coinKey, i) => {\n    return topSection ? /*#__PURE__*/React.createElement(CoinTile, {\n      topSection: true,\n      remove: true,\n      key: i,\n      coinKey: coinKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }) : favourites.includes(coinKey) ? /*#__PURE__*/React.createElement(CoinTile, {\n      disabled: true,\n      key: i,\n      coinKey: coinKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(CoinTile, {\n      key: i,\n      coinKey: coinKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    });\n  });\n}\n\nexport default function CoinGrid({\n  topSection\n}) {\n  return /*#__PURE__*/React.createElement(AppContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, ({\n    coinList,\n    favourites\n  }) => /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, displayCoins(coinList, topSection, favourites)));\n}","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/src/components/Settings/CoinGrid.js"],"names":["React","styled","AppContext","CoinTile","Grid","div","displayCoins","coinList","topSection","favourites","KeyList","Object","keys","slice","map","coinKey","i","includes","CoinGrid"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGA,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAI;;;;;;;;CAAxB;;AAUA,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,UAAhC,EAA4CC,UAA5C,EAAwD;AACpD,QAAMC,OAAO,GAAGF,UAAU,GACpBC,UADoB,GAEpBE,MAAM,CAACC,IAAP,CAAYL,QAAZ,EAAsBM,KAAtB,CAA4B,CAA5B,EAA+B,GAA/B,CAFN;AAIA,SAAOH,OAAO,CAACI,GAAR,CAAY,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAE/B,WAAOR,UAAU,gBACf,oBAAC,QAAD;AAAU,MAAA,UAAU,MAApB;AAAqB,MAAA,MAAM,MAA3B;AAA6B,MAAA,GAAG,EAAEQ,CAAlC;AAAqC,MAAA,OAAO,EAAED,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe,GAEdN,UAAU,CAACQ,QAAX,CAAoBF,OAApB,iBACG,oBAAC,QAAD;AAAU,MAAA,QAAQ,MAAlB;AAAoB,MAAA,GAAG,EAAEC,CAAzB;AAA4B,MAAA,OAAO,EAAED,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,gBAEG,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEC,CAAf;AAAkB,MAAA,OAAO,EAAED,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJN;AAKH,GAPM,CAAP;AASH;;AAED,eAAe,SAASG,QAAT,CAAkB;AAACV,EAAAA;AAAD,CAAlB,EAAgC;AAC3C,sBACI,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAAED,IAAAA,QAAF;AAAYE,IAAAA;AAAZ,GAAD,kBACD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,YAAY,CAAEC,QAAF,EAAYC,UAAZ,EAAwBC,UAAxB,CADjB,CAFJ,CADJ;AAQH","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { AppContext } from '../App/AppProvider'\nimport CoinTile from './CoinTile'\n\n\nconst Grid = styled.div`\n    margin: var(--xl) auto;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, .8fr));\n    justify-content: center;\n    grid-gap: 1rem;\n    align-items: center;\n\n`\n\nfunction displayCoins(coinList, topSection, favourites) {\n    const KeyList = topSection \n        ? favourites \n        : Object.keys(coinList).slice(0, 100)\n\n    return KeyList.map((coinKey, i) => {\n\n        return topSection \n        ? <CoinTile topSection remove  key={i} coinKey={coinKey} /> \n        :  favourites.includes(coinKey)\n            ? <CoinTile disabled  key={i} coinKey={coinKey} />\n            : <CoinTile key={i} coinKey={coinKey} />\n    })\n\n}\n\nexport default function CoinGrid({topSection}) {\n    return (\n        <AppContext.Consumer>\n            {({ coinList, favourites }) => \n            <Grid>\n                {displayCoins( coinList, topSection, favourites )}\n            </Grid>}\n        </AppContext.Consumer>\n    )\n}"]},"metadata":{},"sourceType":"module"}