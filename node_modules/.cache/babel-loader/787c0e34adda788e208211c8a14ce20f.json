{"ast":null,"code":"var _jsxFileName = \"/home/aronberenyi/Code/ancrypto/src/components/Settings/CoinGrid.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { AppContext } from '../App/AppProvider';\nimport { SelectableTile } from '../Shared/Tile';\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n    grid-gap: 1rem;\n`;\nconst AddTile = styled(SelectableTile)`\n    &:hover {\n        background: var(--color--main-light), linear-gradient(to bottom right, transparent, #7aee9766)\n\n    }\n`;\nconst RemTile = styled(SelectableTile)`\n    &:hover {\n        border-color: var(--color-danger);\n        background: linear-gradient(to top left, transparent, red)\n    }\n`;\nexport default function CoinGrid() {\n  return /*#__PURE__*/React.createElement(AppContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, ({\n    coinList\n  }) => /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, Object.keys(coinList).slice(0, 100).map((key, i) => /*#__PURE__*/React.createElement(AddTile, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 69\n    }\n  }, key))));\n}","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/src/components/Settings/CoinGrid.js"],"names":["React","styled","AppContext","SelectableTile","Grid","div","AddTile","RemTile","CoinGrid","coinList","Object","keys","slice","map","key","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAI;;;;CAAxB;AAKA,MAAMC,OAAO,GAAGL,MAAM,CAACE,cAAD,CAAiB;;;;;CAAvC;AAOA,MAAMI,OAAO,GAAGN,MAAM,CAACE,cAAD,CAAiB;;;;;CAAvC;AAMA,eAAe,SAASK,QAAT,GAAoB;AAC/B,sBACI,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,KAAtB,CAA4B,CAA5B,EAA8B,GAA9B,EAAmCC,GAAnC,CAAuC,CAACC,GAAD,EAAMC,CAAN,kBAAY,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBD,GAAlB,CAAnD,CADL,CAFJ,CADJ;AAQH","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { AppContext } from '../App/AppProvider'\nimport { SelectableTile } from '../Shared/Tile'\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n    grid-gap: 1rem;\n`\nconst AddTile = styled(SelectableTile)`\n    &:hover {\n        background: var(--color--main-light), linear-gradient(to bottom right, transparent, #7aee9766)\n\n    }\n`\n\nconst RemTile = styled(SelectableTile)`\n    &:hover {\n        border-color: var(--color-danger);\n        background: linear-gradient(to top left, transparent, red)\n    }\n`\nexport default function CoinGrid() {\n    return (\n        <AppContext.Consumer>\n            {({ coinList }) => \n            <Grid>\n                {Object.keys(coinList).slice(0,100).map((key, i) => <AddTile key={i}>{key}</AddTile>)}\n            </Grid>}\n        </AppContext.Consumer>\n    )\n}"]},"metadata":{},"sourceType":"module"}