{"ast":null,"code":"var _jsxFileName = \"/home/aronberenyi/Code/ancrypto/src/components/Settings/Search.js\";\nimport styled from 'styled-components';\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { breakPoints } from '../Shared/GlobalTheme';\nimport fuzzy from 'fuzzy';\nimport { AppContext } from '../App/AppProvider';\nimport _ from 'lodash';\nconst Title = styled.h2`\n    color: var(--color-main-darker);\n    font-size: var(--xl);\n`;\nconst Form = styled.form`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    flex-wrap: wrap;\n\n`;\nconst SearchInput = styled.input`\n    border: 0;\n    border: 1px solid var(--color-secondary-light);\n    padding: var(--m) var(--l);\n    box-shadow: var(--shadow);\n    border-radius: var(--radius);\n    margin: var(--s) 0;\n    font-size: var(--mx);\n\n    &:focus {\n        border-color: var(--color-main)\n    }\n\n    @media(max-width: ${breakPoints.mobile}) {\n        width: 100%;\n    }\n`; // let fuzzyResults = fuzzy.filter(inputValue, allStringsToSearch, {})\n// const debounce = (callback, value, checkValue, timeout) => {\n//     function check() {\n//        if (value === inputValue) {\n//            callback()\n//        } else { return null }\n//     }\n//     setTimeout(check(), timeout)\n//     // Check if value is still the same\n//     // If not return null\n//     // if yes, then call the callback with timeout\n// }\n\nconst Search = () => {\n  const [userQuery, setQuery] = useState(''); //  ******************** debouncing\n\n  const isInitialMount = useRef(true); // useEffect(() => {\n  //     if (isInitialMount.current) {\n  //         isInitialMount.current = false;\n  //      } else {\n  //          handleFilter()\n  //          return handleFilter.cancel;\n  //      }\n  // }, [userQuery, handleFilter])\n  // ****************-\n\n  return /*#__PURE__*/React.createElement(AppContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, ({\n    setFileredCoins,\n    coinList\n  }) => {\n    const handleFilter = _.debounce((userQuery, coinList, setFilteredCoins) => {\n      console.log('HandleFilter is fired');\n      console.log('userQuery: ', userQuery);\n      console.log('coinList: ', coinList);\n      console.log(' filteredCoins: ', setFilteredCoins); //  Get all the coin symbols\n      // const coinSymbols = Object.keys(coinList)\n      // // Get all the coin names and map symbol to name\n      // const coinNames = coinSymbols.map(sym => coinList[sym].coinName)\n      // let allStringsToSearch = coinSymbols.concat(coinNames)\n      // console.log(allStringsToSearch)\n    }, 500);\n\n    function filterCoins(value, setFilteredCoins, coinList) {\n      handleFilter(value);\n    }\n\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(SearchInput, {\n      value: userQuery,\n      onChange: e => setQuery(e.target.value),\n      onKeyUp: () => filterCoins(userQuery),\n      name: \"searc\",\n      placeholder: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }));\n  });\n};\n\nexport default Search;","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/src/components/Settings/Search.js"],"names":["styled","React","useState","useCallback","useEffect","useRef","breakPoints","fuzzy","AppContext","_","Title","h2","Form","form","SearchInput","input","mobile","Search","userQuery","setQuery","isInitialMount","setFileredCoins","coinList","handleFilter","debounce","setFilteredCoins","console","log","filterCoins","value","e","target"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,EAAkDC,MAAlD,QAAgE,OAAhE;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AAGA,MAAMC,KAAK,GAAGV,MAAM,CAACW,EAAG;;;CAAxB;AAIA,MAAMC,IAAI,GAAGZ,MAAM,CAACa,IAAK;;;;;;;;CAAzB;AAUA,MAAMC,WAAW,GAAGd,MAAM,CAACe,KAAM;;;;;;;;;;;;;wBAaTT,WAAW,CAACU,MAAO;;;CAb3C,C,CAkBA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC,CAFiB,CAMrB;;AAEI,QAAMkB,cAAc,GAAGf,MAAM,CAAC,IAAD,CAA7B,CARiB,CAWjB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACJ;;AACI,sBACI,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAACgB,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,GAAD,KAAiC;AAE9B,UAAMC,YAAY,GAAGd,CAAC,CAACe,QAAF,CAAW,CAACN,SAAD,EAAYI,QAAZ,EAAsBG,gBAAtB,KAA2C;AACvEC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BT,SAA3B;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,QAA1B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,gBAAhC,EAJuE,CAKvF;AACA;AACA;AAEA;AACA;AACA;AAEa,KAboB,EAalB,GAbkB,CAArB;;AAeA,aAASG,WAAT,CAAqBC,KAArB,EAA4BJ,gBAA5B,EAA8CH,QAA9C,EAAwD;AACpDC,MAAAA,YAAY,CAACM,KAAD,CAAZ;AACH;;AACD,wBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,WAAD;AACI,MAAA,KAAK,EAAEX,SADX;AAEI,MAAA,QAAQ,EAAEY,CAAC,IAAIX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASF,KAAV,CAF3B;AAGI,MAAA,OAAO,EAAE,MAAMD,WAAW,CAACV,SAAD,CAH9B;AAII,MAAA,IAAI,EAAC,OAJT;AAKI,MAAA,WAAW,EAAC,QALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAaH,GAlCL,CADJ;AAyCH,CA9DD;;AAgEA,eAAeD,MAAf","sourcesContent":["import styled from 'styled-components'\nimport React, { useState, useCallback, useEffect, useRef } from 'react'\nimport { breakPoints } from '../Shared/GlobalTheme'\nimport fuzzy from 'fuzzy'\nimport { AppContext } from '../App/AppProvider'\nimport _ from 'lodash'\n\n\nconst Title = styled.h2`\n    color: var(--color-main-darker);\n    font-size: var(--xl);\n`\nconst Form = styled.form`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    flex-wrap: wrap;\n\n`\n\nconst SearchInput = styled.input`\n    border: 0;\n    border: 1px solid var(--color-secondary-light);\n    padding: var(--m) var(--l);\n    box-shadow: var(--shadow);\n    border-radius: var(--radius);\n    margin: var(--s) 0;\n    font-size: var(--mx);\n\n    &:focus {\n        border-color: var(--color-main)\n    }\n\n    @media(max-width: ${breakPoints.mobile}) {\n        width: 100%;\n    }\n`\n\n// let fuzzyResults = fuzzy.filter(inputValue, allStringsToSearch, {})\n\n\n\n// const debounce = (callback, value, checkValue, timeout) => {\n//     function check() {\n//        if (value === inputValue) {\n//            callback()\n//        } else { return null }\n//     }\n//     setTimeout(check(), timeout)\n//     // Check if value is still the same\n//     // If not return null\n//     // if yes, then call the callback with timeout\n// }\n\n\n\nconst Search = () => {\n    \n    const [userQuery, setQuery] = useState('')\n    \n\n\n//  ******************** debouncing\n\n    const isInitialMount = useRef(true);\n\n\n    // useEffect(() => {\n    //     if (isInitialMount.current) {\n    //         isInitialMount.current = false;\n    //      } else {\n    //          handleFilter()\n     \n    //          return handleFilter.cancel;\n    //      }\n    // }, [userQuery, handleFilter])\n// ****************-\n    return (\n        <AppContext.Consumer>\n            {({setFileredCoins, coinList}) => {\n\n                const handleFilter = _.debounce((userQuery, coinList, setFilteredCoins) => {\n                    console.log('HandleFilter is fired')\n                    console.log('userQuery: ', userQuery)\n                    console.log('coinList: ', coinList)\n                    console.log(' filteredCoins: ', setFilteredCoins)\n    //  Get all the coin symbols\n    // const coinSymbols = Object.keys(coinList)\n    // // Get all the coin names and map symbol to name\n\n    // const coinNames = coinSymbols.map(sym => coinList[sym].coinName)\n    // let allStringsToSearch = coinSymbols.concat(coinNames)\n    // console.log(allStringsToSearch)\n\n                }, 500)\n\n                function filterCoins(value, setFilteredCoins, coinList) {\n                    handleFilter(value);\n                }\n                return(\n                    <Form>\n                        <Title>Search</Title>\n                        <SearchInput\n                            value={userQuery}\n                            onChange={e => setQuery(e.target.value)}\n                            onKeyUp={() => filterCoins(userQuery)}\n                            name=\"searc\"\n                            placeholder=\"search\"\n                            />\n                    </Form>\n\n                )\n            }\n            }\n        </AppContext.Consumer>\n\n    \n    )\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}