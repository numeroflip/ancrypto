{"ast":null,"code":"var _jsxFileName = \"/home/aronberenyi/Code/ancrypto/src/components/App/AppProvider.js\";\nimport React, { useState, useEffect } from 'react';\nimport cc, { price } from 'cryptocompare';\nimport { render } from '@testing-library/react';\nimport { filter } from 'lodash';\ncc.setApiKey('6bce00cebd36b06c07f20e0e94c2a0fe1b0211dc0a8a8dc030f6fb8b4117f707');\nexport const AppContext = React.createContext();\nconst MAX_FAVOURITES = 10;\nexport default (({\n  children\n}) => {\n  // ==============STATE========================\n  const [page, setPage] = useState('dashboard');\n  const [firstVisit, setFirstVisit] = useState([]);\n  useState(localStorage.getItem('ancrypto') ? false : true);\n  const [favourites, setFavourites] = useState([]);\n  useState(firstVisit ? [] : getFavsFromLocal());\n  const [coinList, setCoinList] = useState(null);\n  const [filteredCoins, setFilteredCoins] = useState([]);\n  const [prices, setPrices] = useState([]);\n  console.log('APP PROVIDER=================================');\n\n  function getFavsFromLocal() {\n    let data = JSON.parse(localStorage.getItem('ancrypto'));\n    let favs = data.favourites;\n    return favs ? favs : [];\n  } // const getPrices = async () => {\n  //     const returnData = [];\n  //     favourites.forEach(async favourite => {\n  //         try {\n  //             let priceData = await cc.priceFull(favourite, 'USD');\n  //             returnData.push(priceData)\n  //         } catch(e) { console.warn('Fetch price error: ', e) }\n  //     }) \n  //     return returnData\n  // }\n  // const addCoin = coinKey => {\n  //     if((favourites.length < MAX_FAVOURITES ) && !favourites.includes(coinKey)) {\n  //         console.log('----SetFavourites----')\n  //         setFavourites([...favourites, coinKey]);\n  //     }\n  // }\n\n\n  const updateFavsInLocalStorage = favourites => {\n    console.log('---UpdateFavsInLocalStorage---');\n    localStorage.setItem('ancrypto', JSON.stringify({\n      favourites\n    }));\n  }; // useEffect(() => {\n  //     console.warn('////Some Data changed (Or init when first called)////')\n  //     console.log('---coinList' , coinList)\n  //     console.log('---filteredCoins', filteredCoins)\n  //     console.log('---prices', prices)\n  //     console.log('---favourites: ', favourites)\n  //     console.log('---firstVisit: ', firstVisit)\n  //     console.log('---page: ', page)\n  // }, [page, firstVisit, favourites, coinList, filteredCoins, prices])\n  // // Write favourites into localstorage\n  // useEffect(() => updateFavsInLocalStorage(favourites), [favourites])\n  // const fetchPrices = async () => {\n  //     let prices = await getPrices()\n  //     console.log('***prices, fetchedPrices: ', prices)\n  //     return prices\n  // }\n  // Fetch Data at startup\n\n\n  useEffect(() => {\n    const fetchCoins = async () => {\n      console.log('=============FETCHCOIN HAPPENED===============');\n      let coins = await cc.coinList();\n      console.log('==COINS ARRIVED==');\n      coins = coins.Data;\n\n      try {\n        return coins;\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    async function initData() {\n      console.error('It should be seen only once!');\n      console.warn('////--STARTER DATA--////');\n      console.log('====STARTUP==== (fetchCoins and fetchPrices)'); // console.log('==> fetching coins')\n      // const coins = await fetchCoins();\n      // console.log('//coins fetched')\n      // console.log('==> fetching prices')\n      // console.log('// Prices are fetched')\n      // const prices = await fetchPrices()\n      // setCoinList(coins)\n      // console.log('// Coins are set')\n      // setPrices(prices);\n      // console.log('==> Prices are set')\n    }\n\n    initData();\n  }, []); // const isInFavourites = (coinKey) => {\n  //     return favourites.includes(coinKey)\n  // } \n  // const removeCoin = coinKey => {\n  //     setFavourites(favourites.filter(key => key !== coinKey))\n  // }\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, children);\n});","map":{"version":3,"sources":["/home/aronberenyi/Code/ancrypto/src/components/App/AppProvider.js"],"names":["React","useState","useEffect","cc","price","render","filter","setApiKey","AppContext","createContext","MAX_FAVOURITES","children","page","setPage","firstVisit","setFirstVisit","localStorage","getItem","favourites","setFavourites","getFavsFromLocal","coinList","setCoinList","filteredCoins","setFilteredCoins","prices","setPrices","console","log","data","JSON","parse","favs","updateFavsInLocalStorage","setItem","stringify","fetchCoins","coins","Data","e","initData","error","warn"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport cc, { price } from 'cryptocompare'\nimport { render } from '@testing-library/react';\nimport { filter } from 'lodash';\ncc.setApiKey('6bce00cebd36b06c07f20e0e94c2a0fe1b0211dc0a8a8dc030f6fb8b4117f707')\nexport const AppContext = React.createContext();\n\nconst MAX_FAVOURITES = 10;\n\n\n\nexport default ({children}) => {\n\n    // ==============STATE========================\n    const [page, setPage] = useState('dashboard');\n    const [firstVisit, setFirstVisit] = useState([])\n    useState(localStorage.getItem('ancrypto') ? false : true)\n    const [favourites, setFavourites] =  useState([])\n    useState(firstVisit ? [] : getFavsFromLocal());\n    const [coinList, setCoinList] = useState(null)\n    const [filteredCoins, setFilteredCoins] = useState([])\n    const [prices, setPrices] = useState([]);\n\n    console.log('APP PROVIDER=================================')\n\n\n    function getFavsFromLocal() {\n        let data = JSON.parse(localStorage.getItem('ancrypto'))\n        let favs = data.favourites;\n        return favs ? favs : []\n    }\n    \n \n    \n    // const getPrices = async () => {\n    //     const returnData = [];\n    //     favourites.forEach(async favourite => {\n    //         try {\n    //             let priceData = await cc.priceFull(favourite, 'USD');\n    //             returnData.push(priceData)\n    //         } catch(e) { console.warn('Fetch price error: ', e) }\n    //     }) \n    //     return returnData\n    // }\n\n    \n\n\n    // const addCoin = coinKey => {\n    //     if((favourites.length < MAX_FAVOURITES ) && !favourites.includes(coinKey)) {\n    //         console.log('----SetFavourites----')\n    //         setFavourites([...favourites, coinKey]);\n    //     }\n    // }\n    const updateFavsInLocalStorage = (favourites) => {\n        console.log('---UpdateFavsInLocalStorage---')\n\n        localStorage.setItem('ancrypto', JSON.stringify({favourites}))\n    }\n\n    // useEffect(() => {\n    //     console.warn('////Some Data changed (Or init when first called)////')\n    //     console.log('---coinList' , coinList)\n    //     console.log('---filteredCoins', filteredCoins)\n    //     console.log('---prices', prices)\n    //     console.log('---favourites: ', favourites)\n    //     console.log('---firstVisit: ', firstVisit)\n    //     console.log('---page: ', page)\n    // }, [page, firstVisit, favourites, coinList, filteredCoins, prices])\n    // // Write favourites into localstorage\n    // useEffect(() => updateFavsInLocalStorage(favourites), [favourites])\n\n    // const fetchPrices = async () => {\n    //     let prices = await getPrices()\n    //     console.log('***prices, fetchedPrices: ', prices)\n    //     return prices\n    // }\n    // Fetch Data at startup\n    useEffect( () => {\n\n        const fetchCoins = async () => {\n            console.log('=============FETCHCOIN HAPPENED===============')\n            let coins = await cc.coinList()\n            console.log('==COINS ARRIVED==')\n            coins = coins.Data\n            try {return coins}\n            catch(e) {console.log(e)}\n        }\n\n\n\n         async function initData() {\n             console.error('It should be seen only once!')\n            console.warn('////--STARTER DATA--////')\n            console.log('====STARTUP==== (fetchCoins and fetchPrices)')\n            // console.log('==> fetching coins')\n            // const coins = await fetchCoins();\n            // console.log('//coins fetched')\n            // console.log('==> fetching prices')\n            // console.log('// Prices are fetched')\n            // const prices = await fetchPrices()\n            // setCoinList(coins)\n            // console.log('// Coins are set')\n            // setPrices(prices);\n            // console.log('==> Prices are set')\n        }\n\n            initData()\n    }, [])\n\n\n    // const isInFavourites = (coinKey) => {\n    //     return favourites.includes(coinKey)\n    // } \n\n    // const removeCoin = coinKey => {\n    //     setFavourites(favourites.filter(key => key !== coinKey))\n    // }\n\n\n    return (\n    <AppContext.Provider \n    // value={\n    //     {\n    //         page, \n    //         coinList, \n    //         setPage, \n    //         favourites,\n    //         isInFavourites,\n    //         setFavourites, \n    //         filteredCoins,\n    //         setFilteredCoins,\n    //         addCoin, \n    //         removeCoin, \n    //         firstVisit\n    //     }\n    // }\n    >{children}</AppContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}